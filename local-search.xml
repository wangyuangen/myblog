<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(10.项目启动-菜单和命令)</title>
    <link href="/2024/05/20/CsharpAutocad10/"/>
    <url>/2024/05/20/CsharpAutocad10/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>经过之前几步的项目基础设施搭建以及Autocad部分操作的实现，现在我们启动项目，并且通过C#代码动态创建Autocad的菜单，并且将菜单和自定义Autocad命令进行绑定</p><p>ACD.Client项目中创建类文件PluginStart.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">assembly: ExtensionApplication(typeof(ACD.Client.PluginStart))</span>]<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ACD.Client</span><br>&#123;<br>    <span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">PluginStart</span> : <span class="hljs-title">IExtensionApplication</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Initialize</span>()</span><br>        &#123;<br>            <span class="hljs-comment">//获取CAD应用程序</span><br>            AcadApplication app = Autodesk.AutoCAD.ApplicationServices.Application.AcadApplication <span class="hljs-keyword">as</span> AcadApplication;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; app.MenuGroups.Item(<span class="hljs-number">0</span>).Menus.Count; i++)<br>            &#123;<br>                <span class="hljs-keyword">var</span> name = app.MenuGroups.Item(<span class="hljs-number">0</span>).Menus.Item(i).Name;<br>                <span class="hljs-keyword">if</span> (name == <span class="hljs-string">&quot;ACDesignBackground&quot;</span>)  <span class="hljs-comment">//判断菜单是否已存在，如果存在则不再创建</span><br>                    <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">//添加根菜单</span><br>            AcadPopupMenu pmParnet = app.MenuGroups.Item(<span class="hljs-number">0</span>).Menus.Add(<span class="hljs-string">&quot;ACDesignBackground&quot;</span>);<br><br>            pmParnet.AddMenuItem(pmParnet.Count + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;ACDesignStart  &quot;</span>, <span class="hljs-string">&quot;ACDesignStart &quot;</span>);<br>            pmParnet.AddMenuItem(pmParnet.Count + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;ACDesignStop  &quot;</span>, <span class="hljs-string">&quot;ACDesignStop &quot;</span>);<br><br>            <span class="hljs-comment">//将创建的菜单加入到CAD的菜单中</span><br>            pmParnet.InsertInMenuBar(app.MenuBar.Count + <span class="hljs-number">1</span>);<br><br>            <span class="hljs-comment">//服务注册</span><br>            <span class="hljs-keyword">await</span> AppInit.Init();<br>        &#125;<br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Terminate</span>()</span> <br>        &#123; <br>            AppInit.BackgroundJobServers?.Dispose();<br>        &#125; <br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>ACD.Client项目中创建类文件Commands.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">using</span> ACDApplication = Autodesk.AutoCAD.ApplicationServices.Core.Application;<br><br>[<span class="hljs-meta">assembly: CommandClass(typeof(ACD.Client.Commands))</span>]<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">ACD.Client</span><br>&#123;<br>    <span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Commands</span><br>    &#123;<br>        [<span class="hljs-meta">CommandMethod(<span class="hljs-string">&quot;ACDesignStart&quot;</span>, CommandFlags.Modal)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ACDesignStart</span>()</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> hangfire = AppInit.Resolve&lt;IHangfireService&gt;();<br><br>            hangfire.AddOrUpdate(() =&gt; Console.WriteLine(<span class="hljs-string">&quot;Hello&quot;</span>), <span class="hljs-string">&quot;*/2 * * * * * &quot;</span>, TimeZoneInfo.Local);<br><br>            <span class="hljs-keyword">var</span> lines = <span class="hljs-keyword">new</span> List&lt;LinkLineParam&gt;<br>            &#123;<br>                 <span class="hljs-keyword">new</span> LinkLineParam<br>                 &#123;<br>                     DimPosition=<span class="hljs-number">100</span>,<br>                     EndPoint= <span class="hljs-keyword">new</span> ACDPoint3D(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">0</span>),<br>                     StartPoint=<span class="hljs-keyword">new</span> ACDPoint3D(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>,<span class="hljs-number">0</span>),<br>                     LineType =  Domain.LineType.DimensionLine,<br>                     LayerName=<span class="hljs-string">&quot;尺寸线层&quot;</span><br>                 &#125;,<br>                 <span class="hljs-keyword">new</span> LinkLineParam<br>                 &#123;<br>                     DimPosition=<span class="hljs-number">100</span>,<br>                     EndPoint= <span class="hljs-keyword">new</span> ACDPoint3D(<span class="hljs-number">300</span>,<span class="hljs-number">100</span>,<span class="hljs-number">0</span>),<br>                     StartPoint=<span class="hljs-keyword">new</span> ACDPoint3D(<span class="hljs-number">500</span>,<span class="hljs-number">200</span>,<span class="hljs-number">0</span>),<br>                     LineType =  Domain.LineType.BlockLinkLine,<br>                     LayerName=<span class="hljs-string">&quot;center&quot;</span><br>                 &#125;<br>            &#125;;<br><br>            <span class="hljs-keyword">var</span> logger = AppInit.Resolve&lt;IloggerService&gt;();<br>            logger.Info(<span class="hljs-string">&quot;Hello&quot;</span>);<br><br>            <span class="hljs-comment">//当前工作文档</span><br>            Document document = ACDApplication.DocumentManager.MdiActiveDocument;<br>            <span class="hljs-comment">//绘制线条</span><br>            ACDOperation.Instance.LinkLine(document.Database,lines);<br>        &#125;<br><br>        [<span class="hljs-meta">CommandMethod(<span class="hljs-string">&quot;ACDesignStop&quot;</span>, CommandFlags.Modal)</span>]<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ACDesignStop</span>()</span><br>        &#123;<br>            AppInit.BackgroundJobServers?.Dispose();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>选中ACD.Client项目文件，右键打开属性窗体，在调试中将启动操作的启动外部程序选中，浏览文件选中Autocad 安装目录中的exe文件，例如：F:\AutoCad\Application\AutoCAD 2023\acad.exe<br><img src="/img/acadexe.png" alt="图片" title="启动外部程序"></p><p>调试运行ACD.Client项目时，F:\AutoCad\Application\AutoCAD 2023\acad.exe执行程序会同时启动，autocad启动后，打开或新建文件，在当前文件的工作文档中输入命令”netload”加载ACD.Client.dll<br><img src="/img/netload.png" alt="图片" title="netload命令"></p><p>ACD.Client.dll加载后，程序进入PluginStart.Initialize()方法中，这时会通过代码创建自定义菜单，通过点击相应的菜单执行不同的命令并进入该命令绑定的方法中，例如点击菜单ACDesignStart进入到Commands.ACDesignStart()方法<br><img src="/img/linkline.png" alt="图片" title="绘制线条"></p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(9.Sqlsugar仓储模式)</title>
    <link href="/2024/05/20/CsharpAutocad9/"/>
    <url>/2024/05/20/CsharpAutocad9/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><h3 id="Sqlsugar介绍"><a href="#Sqlsugar介绍" class="headerlink" title="Sqlsugar介绍"></a>Sqlsugar介绍</h3><p>SqlSugar是一个开源的ORM框架，支持. NET Core&#x2F;.NET Framework&#x2F;Mono&#x2F;Xamarin。 它是一个轻量级、易于使用、高性能的ORM框架，具有较强的扩展性。 SqlSugar不仅提供基础的CRUD操作，还提供了更高级的查询操作，如多表联查、分页、分组、聚合等功能。更多介绍和文档参阅官网。</p><h3 id="配置项实体"><a href="#配置项实体" class="headerlink" title="配置项实体"></a>配置项实体</h3><p>ACD.Domain项目中创建DbConfig配置的实体类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> ACDesign 数据库配置</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDesignDbConfig</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 连接名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 连接字符串</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> ConnectionString &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> Default &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> IsAutoCloseConnection &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> DbType DbType &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDesignDbConfig</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDesignDbConfig</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">string</span> connectionString, <span class="hljs-built_in">bool</span> @<span class="hljs-literal">default</span>, <span class="hljs-built_in">bool</span> isAutoCloseConnection, DbType dbType</span>)</span><br>    &#123;<br>        Name = name;<br>        ConnectionString = connectionString;<br>        Default = @default;<br>        IsAutoCloseConnection = isAutoCloseConnection;<br>        DbType = dbType;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Domain项目中配置项AppSettingConfig中加入数据库配置</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 配置项</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppSettingConfig</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库配置</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> ACDesignDbConfig ACDesignDbConfig &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> hangfire 数据库连接</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> HangfireStorage &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="抽象约束"><a href="#抽象约束" class="headerlink" title="抽象约束"></a>抽象约束</h3><p>ACD.Domain项目中添加对数据库表对应的实体类约束：<br>创建ISoftDelete.cs接口文件</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">ISoftDelete</span><br>&#123;<br>    DateTime? DeletedOn &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-built_in">bool</span> IsDeleted &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建IEntity接口文件</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-symbol">IEntity</span> &#123;  &#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-symbol">IEntity</span>&lt;<span class="hljs-symbol">TId</span>&gt; : <span class="hljs-symbol">IEntity</span><br>&#123;<br>    TId Id &#123; <span class="hljs-keyword">get</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建IAuditableEntity接口文件</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dart">public <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IAuditableEntity</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-built_in">DateTime</span> CreatedOn &#123; <span class="hljs-keyword">get</span>; &#125;<br>    <span class="hljs-built_in">DateTime?</span> LastModifiedOn &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建BaseEntity抽象类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BaseEntity</span> : <span class="hljs-title">BaseEntity</span>&lt;<span class="hljs-title">Guid</span>&gt;<br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-title">BaseEntity</span>()</span> =&gt; Id = Guid.NewGuid();<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BaseEntity</span>&lt;<span class="hljs-title">TId</span>&gt; : <span class="hljs-title">IEntity</span>&lt;<span class="hljs-title">TId</span>&gt;<br>&#123;<br>    [<span class="hljs-meta">SugarColumn(IsPrimaryKey = true)</span>]<br>    <span class="hljs-keyword">public</span> TId Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; <br>&#125;<br></code></pre></td></tr></table></figure><p>创建AuditableEntity抽象类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AuditableEntity</span> : <span class="hljs-title">AuditableEntity</span>&lt;<span class="hljs-title">Guid</span>&gt;<br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-title">AuditableEntity</span>()</span> =&gt; Id = Guid.NewGuid();<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AuditableEntity</span>&lt;<span class="hljs-title">T</span>&gt; : <span class="hljs-title">BaseEntity</span>&lt;<span class="hljs-title">T</span>&gt;, <span class="hljs-title">IAuditableEntity</span>, <span class="hljs-title">ISoftDelete</span><br>&#123;<br>    <span class="hljs-keyword">public</span> DateTime CreatedOn &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">private</span> <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> DateTime? LastModifiedOn &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> DateTime? DeletedOn &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> IsDeleted &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-title">AuditableEntity</span>()</span><br>    &#123;<br>        CreatedOn = DateTime.Now;<br>        IsDeleted = <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Application项目中创建泛型接口IDbRepository<T></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">public</span> interface <span class="hljs-type">IDbRepository</span>&lt;<span class="hljs-type">T</span>&gt;<br>     <span class="hljs-keyword">where</span> <span class="hljs-type">T</span> : <span class="hljs-keyword">class</span>, <span class="hljs-title class_">ISoftDelete</span>, <span class="hljs-title class_">IAuditableEntity</span>, <span class="hljs-title class_">new</span>()<br>&#123;<br>    <span class="hljs-type">ISugarQueryable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsQueryable</span>();<br>    <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">T</span> insertObj);<br>    <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">T</span>[] insertObjs);<br>    <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs);<br>    <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">T</span> updateObj);<br>    <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">T</span>[] updateObjs);<br>    <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; updateObjs);<br>    <span class="hljs-type">IDeleteable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsDeleteable</span>();<br><br>    <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>();<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>();<br>    <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>);<br>    <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetPageList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetPageListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page);<br>    <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetPageList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetPageListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>);<br><br>    int <span class="hljs-type">Count</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;int&gt; <span class="hljs-type">CountAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">T</span> <span class="hljs-type">GetById</span>(<span class="hljs-keyword">dynamic</span> id);<br>    <span class="hljs-type">T</span> <span class="hljs-type">GetSingle</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetSingleAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">T</span> <span class="hljs-type">GetFirst</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetFirstAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br><br>    bool <span class="hljs-type">IsAny</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">IsAnyAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br><br>    bool <span class="hljs-type">Insert</span>(<span class="hljs-type">T</span> insertObj);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertAsync</span>(<span class="hljs-type">T</span> insertObj);<br>    bool <span class="hljs-type">InsertRange</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertRangeAsync</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs);<br>    bool <span class="hljs-type">InsertRange</span>(<span class="hljs-type">T</span>[] insertObjs);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertRangeAsync</span>(<span class="hljs-type">T</span>[] insertObjs);<br>    int <span class="hljs-type">InsertReturnIdentity</span>(<span class="hljs-type">T</span> insertObj);<br>    <span class="hljs-type">Task</span>&lt;long&gt; <span class="hljs-type">InsertReturnIdentityAsync</span>(<span class="hljs-type">T</span> insertObj);<br><br>    bool <span class="hljs-type">Delete</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    bool <span class="hljs-type">Delete</span>(<span class="hljs-type">T</span> deleteObj);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteAsync</span>(<span class="hljs-type">T</span> deleteObj);<br>    bool <span class="hljs-type">DeleteById</span>(<span class="hljs-keyword">dynamic</span> id);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteByIdAsync</span>(<span class="hljs-keyword">dynamic</span> id);<br>    bool <span class="hljs-type">DeleteByIds</span>(<span class="hljs-keyword">dynamic</span>[] ids);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteByIdsAsync</span>(<span class="hljs-keyword">dynamic</span>[] ids);<br><br>    bool <span class="hljs-type">Update</span>(<span class="hljs-type">T</span> t, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; columns, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateAsync</span>(<span class="hljs-type">T</span> t, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; columns, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression);<br>    bool <span class="hljs-type">Update</span>(<span class="hljs-type">T</span> updateObj);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateAsync</span>(<span class="hljs-type">T</span> updateObj);<br>    bool <span class="hljs-type">UpdateRange</span>(<span class="hljs-type">T</span>[] updateObjs);<br>    <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateRangeAsync</span>(<span class="hljs-type">T</span>[] updateObjs);<br><br>    <span class="hljs-type">DbResult</span>&lt;<span class="hljs-type">T2</span>&gt; <span class="hljs-type">UseTran</span>&lt;<span class="hljs-type">T2</span>&gt;(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T2</span>&gt; action);<br>    <span class="hljs-type">DbResult</span>&lt;bool&gt; <span class="hljs-type">UseTran</span>(<span class="hljs-type">Action</span> action);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">DbResult</span>&lt;<span class="hljs-type">T2</span>&gt;&gt; <span class="hljs-type">UseTranAsync</span>&lt;<span class="hljs-type">T2</span>&gt;(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">Task</span>&lt;<span class="hljs-type">T2</span>&gt;&gt; action, <span class="hljs-type">Action</span>&lt;<span class="hljs-type">Exception</span>&gt; errorCallBack <span class="hljs-operator">=</span> null);<br>    <span class="hljs-type">Task</span>&lt;<span class="hljs-type">DbResult</span>&lt;bool&gt;&gt; <span class="hljs-type">UseTranAsync</span>(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">Task</span>&gt; action, <span class="hljs-type">Action</span>&lt;<span class="hljs-type">Exception</span>&gt; errorCallBack <span class="hljs-operator">=</span> null);<br><br>    void <span class="hljs-type">BeginTran</span>();<br>    void <span class="hljs-type">CommitTran</span>();<br>    void <span class="hljs-type">RollbackTran</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>ACD.Infrastructure项目中添加类文件DbConnectOption.cs，继承自Sqlsugar配置ConnectionConfig</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">DbConnectOption</span>:<span class="hljs-title">ConnectionConfig</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 数据库连接名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125; <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 是否默认库</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> Default &#123; <span class="hljs-keyword">set</span>; <span class="hljs-keyword">get</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中添加类文件ACDSqlSugarClient，继承自Sqlsugar客户端SqlSugarClient</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ACDSqlSugarClient</span> : SqlSugarClient<br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDSqlSugarClient</span><span class="hljs-params">(DbConnectOption config)</span> : base(config)</span><br><span class="hljs-function">    &#123;</span><br>        DbName = config.Name;<br>        Default = config.Default;<br>    &#125;<br>    <span class="hljs-keyword">public</span> string DbName &#123; set; get; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">bool</span> Default &#123; set; get; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中添加类文件DbRepository.cs实现自IDbRepository<T></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DbRepository</span>&lt;<span class="hljs-title class_">T</span>&gt;:<span class="hljs-title class_">IDbRepository</span>&lt;<span class="hljs-title class_">T</span>&gt;<br>     <span class="hljs-title class_">where</span> <span class="hljs-title class_">T</span> : <span class="hljs-title class_">class</span>, <span class="hljs-title class_">ISoftDelete</span>, <span class="hljs-title class_">IAuditableEntity</span>, <span class="hljs-title class_">new</span>()<br>&#123;<br>    <span class="hljs-keyword">private</span> readonly <span class="hljs-type">ACDSqlSugarClient</span> <span class="hljs-type">DbContext</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">DbRepository</span>(<span class="hljs-type">ACDSqlSugarClient</span> client)<br>    &#123;<br>        <span class="hljs-type">DbContext</span> <span class="hljs-operator">=</span> client;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">ISugarQueryable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsQueryable</span>()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Queryable</span>&lt;<span class="hljs-type">T</span>&gt;().<span class="hljs-type">Where</span>(x <span class="hljs-operator">=&gt;</span> <span class="hljs-operator">!</span>x.<span class="hljs-type">IsDeleted</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">T</span> insertObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Insertable</span>(insertObj);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">T</span>[] insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Insertable</span>(insertObjs);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IInsertable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsInsertable</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Insertable</span>(insertObjs);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">T</span> updateObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Updateable</span>(updateObj);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">T</span>[] updateObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Updateable</span>(updateObjs);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IUpdateable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsUpdateable</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; updateObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Updateable</span>(updateObjs);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IDeleteable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsDeleteable</span>()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Deleteable</span>&lt;<span class="hljs-type">T</span>&gt;();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">IDeleteable</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">AsDeleteable</span>(<span class="hljs-type">T</span> deleteObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Deleteable</span>(deleteObj);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">ToList</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>()<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">ToListAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToList</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToListAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">OrderByIF</span>(orderByExpression <span class="hljs-operator">!=</span> null, orderByExpression, orderByType).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToList</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">OrderByIF</span>(orderByExpression <span class="hljs-operator">!=</span> null, orderByExpression, orderByType).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToListAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetPageList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page)<br>    &#123;<br>        int count <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> result <span class="hljs-operator">=</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToPageList</span>(page.<span class="hljs-type">PageIndex</span>, page.<span class="hljs-type">PageSize</span>, ref count);<br>        page.<span class="hljs-type">TotalCount</span> <span class="hljs-operator">=</span> count;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetPageListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page)<br>    &#123;<br>        <span class="hljs-type">RefAsync</span>&lt;int&gt; count <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> result <span class="hljs-operator">=</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToPageListAsync</span>(page.<span class="hljs-type">PageIndex</span>, page.<span class="hljs-type">PageSize</span>, count);<br>        page.<span class="hljs-type">TotalCount</span> <span class="hljs-operator">=</span> count;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetPageList</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>)<br>    &#123;<br>        int count <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> result <span class="hljs-operator">=</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">OrderByIF</span>(orderByExpression <span class="hljs-operator">!=</span> null, orderByExpression, orderByType).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToPageList</span>(page.<span class="hljs-type">PageIndex</span>, page.<span class="hljs-type">PageSize</span>, ref count);<br>        page.<span class="hljs-type">TotalCount</span> <span class="hljs-operator">=</span> count;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt;&gt; <span class="hljs-type">GetPageListAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression, <span class="hljs-type">PageModel</span> page, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; orderByExpression <span class="hljs-operator">=</span> null, <span class="hljs-type">OrderByType</span> orderByType <span class="hljs-operator">=</span> <span class="hljs-type">OrderByType</span>.<span class="hljs-type">Asc</span>)<br>    &#123;<br>        <span class="hljs-type">RefAsync</span>&lt;int&gt; count <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">var</span> result <span class="hljs-operator">=</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">OrderByIF</span>(orderByExpression <span class="hljs-operator">!=</span> null, orderByExpression, orderByType).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ToPageListAsync</span>(page.<span class="hljs-type">PageIndex</span>, page.<span class="hljs-type">PageSize</span>, count);<br>        page.<span class="hljs-type">TotalCount</span> <span class="hljs-operator">=</span> count;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> int <span class="hljs-type">Count</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Count</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;int&gt; <span class="hljs-type">CountAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">CountAsync</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">T</span> <span class="hljs-type">GetById</span>(<span class="hljs-keyword">dynamic</span> id)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">InSingle</span>(id);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">T</span> <span class="hljs-type">GetSingle</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">Single</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetSingleAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">SingleAsync</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">T</span> <span class="hljs-type">GetFirst</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">First</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">T</span>&gt; <span class="hljs-type">GetFirstAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">FirstAsync</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">IsAny</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-keyword">Any</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">IsAnyAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsQueryable</span>().<span class="hljs-type">AnyAsync</span>(whereExpression);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">Insert</span>(<span class="hljs-type">T</span> insertObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsInsertable</span>(insertObj).<span class="hljs-type">ExecuteCommand</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertAsync</span>(<span class="hljs-type">T</span> insertObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-type">AsInsertable</span>(insertObj).<span class="hljs-type">ExecuteCommandAsync</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">InsertRange</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsInsertable</span>(insertObjs).<span class="hljs-type">ExecuteCommand</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertRangeAsync</span>(<span class="hljs-type">List</span>&lt;<span class="hljs-type">T</span>&gt; insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-type">AsInsertable</span>(insertObjs).<span class="hljs-type">ExecuteCommandAsync</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">InsertRange</span>(<span class="hljs-type">T</span>[] insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsInsertable</span>(insertObjs).<span class="hljs-type">ExecuteCommand</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">InsertRangeAsync</span>(<span class="hljs-type">T</span>[] insertObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-type">AsInsertable</span>(insertObjs).<span class="hljs-type">ExecuteCommandAsync</span>() <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> int <span class="hljs-type">InsertReturnIdentity</span>(<span class="hljs-type">T</span> insertObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsInsertable</span>(insertObj).<span class="hljs-type">ExecuteReturnIdentity</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;long&gt; <span class="hljs-type">InsertReturnIdentityAsync</span>(<span class="hljs-type">T</span> insertObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsInsertable</span>(insertObj).<span class="hljs-type">ExecuteReturnBigIdentityAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">Delete</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteAsync</span>(<span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">Delete</span>(<span class="hljs-type">T</span> deleteObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>(deleteObj).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteAsync</span>(<span class="hljs-type">T</span> deleteObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>(deleteObj).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">DeleteById</span>(<span class="hljs-keyword">dynamic</span> id)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">In</span>(id).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteByIdAsync</span>(<span class="hljs-keyword">dynamic</span> id)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">In</span>(id).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">DeleteByIds</span>(<span class="hljs-keyword">dynamic</span>[] ids)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">In</span>(ids).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">DeleteByIdsAsync</span>(<span class="hljs-keyword">dynamic</span>[] ids)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsDeleteable</span>().<span class="hljs-type">In</span>(ids).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">Update</span>(<span class="hljs-type">T</span> t, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; columns, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(t).<span class="hljs-type">UpdateColumns</span>(columns).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateAsync</span>(<span class="hljs-type">T</span> t, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, object&gt;&gt; columns, <span class="hljs-type">Expression</span>&lt;<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T</span>, bool&gt;&gt; whereExpression)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(t).<span class="hljs-type">UpdateColumns</span>(columns).<span class="hljs-type">Where</span>(whereExpression).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">Update</span>(<span class="hljs-type">T</span> updateObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(updateObj).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateAsync</span>(<span class="hljs-type">T</span> updateObj)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(updateObj).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool <span class="hljs-type">UpdateRange</span>(<span class="hljs-type">T</span>[] updateObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(updateObjs).<span class="hljs-type">ExecuteCommandHasChange</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;bool&gt; <span class="hljs-type">UpdateRangeAsync</span>(<span class="hljs-type">T</span>[] updateObjs)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">AsUpdateable</span>(updateObjs).<span class="hljs-type">ExecuteCommandHasChangeAsync</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">DbResult</span>&lt;<span class="hljs-type">T2</span>&gt; <span class="hljs-type">UseTran</span>&lt;<span class="hljs-type">T2</span>&gt;(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">T2</span>&gt; action)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">UseTran</span>(action);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">DbResult</span>&lt;bool&gt; <span class="hljs-type">UseTran</span>(<span class="hljs-type">Action</span> action)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">UseTran</span>(action);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">DbResult</span>&lt;<span class="hljs-type">T2</span>&gt;&gt; <span class="hljs-type">UseTranAsync</span>&lt;<span class="hljs-type">T2</span>&gt;(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">Task</span>&lt;<span class="hljs-type">T2</span>&gt;&gt; action, <span class="hljs-type">Action</span>&lt;<span class="hljs-type">Exception</span>&gt; errorCallBack <span class="hljs-operator">=</span> null)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">UseTranAsync</span>(action, errorCallBack);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">Task</span>&lt;<span class="hljs-type">DbResult</span>&lt;bool&gt;&gt; <span class="hljs-type">UseTranAsync</span>(<span class="hljs-type">Func</span>&lt;<span class="hljs-type">Task</span>&gt; action, <span class="hljs-type">Action</span>&lt;<span class="hljs-type">Exception</span>&gt; errorCallBack <span class="hljs-operator">=</span> null)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">UseTranAsync</span>(action, errorCallBack);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> void <span class="hljs-type">BeginTran</span>()<br>    &#123;<br>        <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">BeginTran</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> void <span class="hljs-type">CommitTran</span>()<br>    &#123;<br>        <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">CommitTran</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> void <span class="hljs-type">RollbackTran</span>()<br>    &#123;<br>        <span class="hljs-type">DbContext</span>.<span class="hljs-type">Ado</span>.<span class="hljs-type">RollbackTran</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddInfrastructure</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder,AppSettingConfig config</span>)</span><br>    &#123;<br>        builder.RegisterModule&lt;NLogModule&gt;();<br><br>        <span class="hljs-keyword">return</span> builder<br>         .AddDbClient(<br>             <span class="hljs-keyword">new</span> DbConnectOption<br>             &#123;<br>                   DbType = config.ACDesignDbConfig.DbType,<br>                   Name= config.ACDesignDbConfig.Name,<br>                   Default=config.ACDesignDbConfig.Default,<br>                   ConnectionString= config.ACDesignDbConfig.ConnectionString,<br>                   IsAutoCloseConnection = config.ACDesignDbConfig.IsAutoCloseConnection<br>             &#125;<br>         )<br>         .AddDbRepository()<br>         .AddServices();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddDbClient</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder, DbConnectOption dbConfig</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (dbConfig.IsNull()) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> InternalServerException(<span class="hljs-string">&quot;请配置数据库连接&quot;</span>);<br><br>        <span class="hljs-comment">//单例</span><br>        builder.RegisterInstance(<span class="hljs-keyword">new</span> ACDSqlSugarClient(dbConfig))<br>        .SingleInstance();<br><br>        <span class="hljs-keyword">return</span> builder;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddDbRepository</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        builder.RegisterGeneric(<span class="hljs-keyword">typeof</span>(DbRepository&lt;&gt;))<br>            .As(<span class="hljs-keyword">typeof</span>(IDbRepository&lt;&gt;))<br>            .InstancePerLifetimeScope();<br><br>        <span class="hljs-keyword">return</span> builder;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BackgroundJobServer <span class="hljs-title">AddHangfireService</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IGlobalConfiguration configuration, AppSettingConfig config</span>)</span><br>    &#123;<br>        configuration<br>            .SetDataCompatibilityLevel(CompatibilityLevel.Version_170)<br>            .UseSimpleAssemblyNameTypeSerializer()<br>            .UseRecommendedSerializerSettings()<br>            .UseSqlServerStorage(config.HangfireStorage, <span class="hljs-keyword">new</span> SqlServerStorageOptions<br>            &#123;<br>                CommandBatchMaxTimeout = TimeSpan.FromMinutes(<span class="hljs-number">5</span>),<br>                SlidingInvisibilityTimeout = TimeSpan.FromMinutes(<span class="hljs-number">5</span>),<br>                QueuePollInterval = TimeSpan.Zero,<br>                UseRecommendedIsolationLevel = <span class="hljs-literal">true</span><br>            &#125;);<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> BackgroundJobServer();<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 配置注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configFileName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;FileNotFoundException&quot;&gt;</span><span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;AppSettingConfig&gt; <span class="hljs-title">AddAppConfig</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder, <span class="hljs-built_in">string</span> configFileName = <span class="hljs-string">&quot;appsettings.json&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> configFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, configFileName);<br><br>        <span class="hljs-keyword">if</span> (!File.Exists(configFile)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> FileNotFoundException(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;configFileName&#125;</span> 配置文件不存在&quot;</span>);<br><br>        <span class="hljs-built_in">string</span> jsonString;<br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> stream = File.OpenRead(configFile))<br>        &#123;<br>            <span class="hljs-keyword">var</span> reader = <span class="hljs-keyword">new</span> StreamReader(stream);<br>            jsonString = <span class="hljs-keyword">await</span> reader.ReadToEndAsync();<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> appSetting = JsonConvert.DeserializeObject&lt;AppSettingConfig&gt;(jsonString);<br><br>        builder<br>            .RegisterInstance(appSetting)<br>            .SingleInstance();<br><br>        <span class="hljs-keyword">return</span> appSetting;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddServices</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> interfaceType = <span class="hljs-keyword">typeof</span>(IBaseService);<br><br>        <span class="hljs-comment">//通过表达式过滤不需要加载的程序集</span><br>        <span class="hljs-keyword">var</span> types =<br>           AppDomain.CurrentDomain.GetReferanceAssemblies(x =&gt; x.FullName.StartsWith(<span class="hljs-string">&quot;ACD.&quot;</span>));<br><br>        <span class="hljs-keyword">var</span> interfaceTypes = types<br>                .SelectMany(s =&gt; s.GetTypes())<br>                .Where(t =&gt; interfaceType.IsAssignableFrom(t)<br>                            &amp;&amp; t.IsClass &amp;&amp; !t.IsAbstract)<br>                .Select(t =&gt; <span class="hljs-keyword">new</span><br>                &#123;<br>                    Service = t.GetInterfaces().FirstOrDefault(),<br>                    Implementation = t<br>                &#125;)<br>                .Where(t =&gt; t.Service != <span class="hljs-literal">null</span><br>                            &amp;&amp; interfaceType.IsAssignableFrom(t.Service));<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> type <span class="hljs-keyword">in</span> interfaceTypes)<br>        &#123;<br>            <span class="hljs-comment">//这里默认为瞬时注入，可根据传入参数决定注入的生命周期</span><br>            <span class="hljs-comment">//或者将IBaseService拆分为三个接口，对应三个不同的生命周期分别注入</span><br>            builder.RegisterType(type.Implementation)<br>                .As(type.Service)<br>                .InstancePerDependency();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> builder;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Client项目中AppInit.cs调用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppInit</span><br> &#123;<br>     <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> IContainer Container;<br><br>     <span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> IDisposable BackgroundJobServers;<br><br>     <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Init</span>()</span><br>     &#123;<br>         <span class="hljs-keyword">var</span> builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>         <span class="hljs-keyword">var</span> config = <span class="hljs-keyword">await</span> builder.AddAppConfig(<span class="hljs-string">&quot;appsettings.json&quot;</span>);<br><br>         BackgroundJobServers = GlobalConfiguration.Configuration.AddHangfireService(config);<br><br>         builder.AddInfrastructure(config);<br><br>         Container = builder.Build();<br>     &#125;<br><br>     <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">Resolve</span>&lt;<span class="hljs-title">T</span>&gt;()</span> =&gt; Container.Resolve&lt;T&gt;();<br> &#125;<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//C/S端：</span><br><br><span class="hljs-keyword">await</span> AppInit.Init();<br><br><span class="hljs-comment">//B/S端：</span><br><br>将AppInit中的内容在Global.asax中或ApplicationStart中实现<br><br><span class="hljs-comment">//Point为实体类</span><br><br>IDbRepository&lt;Point&gt; pointRepo = AppInit.Resolve&lt;IDbRepository&lt;Point&gt;&gt;();<br><span class="hljs-keyword">var</span> results = <span class="hljs-keyword">await</span> pointRepo.GetListAsync();<br><br><span class="hljs-comment">//or</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDesign</span><br>&#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IDbRepository&lt;Point&gt; _pointRepo;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDesign</span>(<span class="hljs-params">IDbRepository&lt;Point&gt; pointRepo</span>)</span> =&gt; _pointRepo = pointRepo;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Demo</span>()</span><br>   &#123;<br>       <span class="hljs-comment">// _pointRepo.GetListAsync();</span><br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Client项目中的配置文件appsettings.json修改如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;ACDesignDbConfig&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;Name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ACDesign&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ConnectionString&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Data Source=localhost;Initial Catalog = ACDesign;User Id = sa;Password = 123456;&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;IsAutoCloseConnection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;Default&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;DbType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SqlServer&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;HangfireStorage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Data Source=localhost;Initial Catalog = hangfire;User Id = sa;Password = 123456;&quot;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>Autofac</tag>
      
      <tag>Sqlsugar</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(8.Hangfire后台任务)</title>
    <link href="/2024/05/20/CsharpAutocad8/"/>
    <url>/2024/05/20/CsharpAutocad8/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><h3 id="Hangfire介绍"><a href="#Hangfire介绍" class="headerlink" title="Hangfire介绍"></a>Hangfire介绍</h3><p>Hangfire是一个开源的.NET任务调度框架，提供了内置的控制台面板，任务可以支持在控制台面板手动执行，并且可以通过配置让其支持持久化存储。Hangfire与特定的.NET应用程序类型无关。你可以在Web应用程序，客户端应用程序，控制台应用程序或Windows服务中使用它。</p><h3 id="服务注入"><a href="#服务注入" class="headerlink" title="服务注入"></a>服务注入</h3><p>这里同样通过Autofac注入hangfire服务，ACD.Application项目中创建IHangfireService.cs接口文件并继承自IBaseService</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IHangfireService</span>:<span class="hljs-title">IBaseService</span><br>&#123;<br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 循环任务</span><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 队列任务</span><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall</span>)</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-meta">#<span class="hljs-keyword">region</span> 延时任务</span><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, TimeSpan delay</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, TimeSpan delay</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, DateTimeOffset enqueueAt</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, TimeSpan delay</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, TimeSpan delay</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span>;<br>    <span class="hljs-meta">#<span class="hljs-keyword">endregion</span></span><br><br>    <span class="hljs-function"><span class="hljs-built_in">bool</span> <span class="hljs-title">Delete</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">bool</span> <span class="hljs-title">Delete</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId, <span class="hljs-built_in">string</span> fromState</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">bool</span> <span class="hljs-title">Requeue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">bool</span> <span class="hljs-title">Requeue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId, <span class="hljs-built_in">string</span> fromState</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中创建HangfireService.cs并实现自IHangfireService</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HangfireService</span>:<span class="hljs-title">IHangfireService</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>     =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, Func&lt;<span class="hljs-built_in">string</span>&gt; cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">AddOrUpdate</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, <span class="hljs-built_in">string</span> cronExpression, TimeZoneInfo timeZone = <span class="hljs-literal">null</span>, <span class="hljs-built_in">string</span> queue = <span class="hljs-string">&quot;default&quot;</span></span>)</span><br>        =&gt; RecurringJob.AddOrUpdate(methodCall, cronExpression, timeZone, queue);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Delete</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId</span>)</span> =&gt;<br>        BackgroundJob.Delete(jobId);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Delete</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId, <span class="hljs-built_in">string</span> fromState</span>)</span> =&gt;<br>        BackgroundJob.Delete(jobId, fromState);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall</span>)</span> =&gt;<br>        BackgroundJob.Enqueue(methodCall);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall</span>)</span> =&gt;<br>        BackgroundJob.Enqueue(methodCall);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall</span>)</span> =&gt;<br>        BackgroundJob.Enqueue(methodCall);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Enqueue</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall</span>)</span> =&gt;<br>        BackgroundJob.Enqueue(methodCall);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Requeue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId</span>)</span> =&gt;<br>        BackgroundJob.Requeue(jobId);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Requeue</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> jobId, <span class="hljs-built_in">string</span> fromState</span>)</span> =&gt;<br>        BackgroundJob.Requeue(jobId, fromState);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, TimeSpan delay</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, delay);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, TimeSpan delay</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, delay);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Action&gt; methodCall, DateTimeOffset enqueueAt</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, enqueueAt);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>(<span class="hljs-params">Expression&lt;Func&lt;Task&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, enqueueAt);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, TimeSpan delay</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, delay);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, TimeSpan delay</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, delay);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Action&lt;T&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, enqueueAt);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> <span class="hljs-title">Schedule</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">Expression&lt;Func&lt;T, Task&gt;&gt; methodCall, DateTimeOffset enqueueAt</span>)</span> =&gt;<br>        BackgroundJob.Schedule(methodCall, enqueueAt);<br>&#125;<br></code></pre></td></tr></table></figure><p>项目ACD.Domain中的配置项实体类AppSettingConfig添加字段保存hangfire的数据库链接字符串</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 配置项</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppSettingConfig</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> hangfire 数据库连接</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> HangfireStorage &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中Startup静态类中实现Hangfire的注入配置</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddInfrastructure</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        builder.RegisterModule&lt;NLogModule&gt;();<br><br>        <span class="hljs-keyword">return</span> builder<br>         .AddServices();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BackgroundJobServer <span class="hljs-title">AddHangfireService</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> IGlobalConfiguration configuration, AppSettingConfig config</span>)</span><br>    &#123;<br>        configuration<br>            .SetDataCompatibilityLevel(CompatibilityLevel.Version_170)<br>            .UseSimpleAssemblyNameTypeSerializer()<br>            .UseRecommendedSerializerSettings()<br>            .UseSqlServerStorage(config.HangfireStorage, <span class="hljs-keyword">new</span> SqlServerStorageOptions<br>            &#123;<br>                CommandBatchMaxTimeout = TimeSpan.FromMinutes(<span class="hljs-number">5</span>),<br>                SlidingInvisibilityTimeout = TimeSpan.FromMinutes(<span class="hljs-number">5</span>),<br>                QueuePollInterval = TimeSpan.Zero,<br>                UseRecommendedIsolationLevel = <span class="hljs-literal">true</span><br>            &#125;);<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> BackgroundJobServer();<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 配置注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configFileName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;FileNotFoundException&quot;&gt;</span><span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;AppSettingConfig&gt; <span class="hljs-title">AddAppConfig</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder, <span class="hljs-built_in">string</span> configFileName = <span class="hljs-string">&quot;appsettings.json&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> configFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, configFileName);<br><br>        <span class="hljs-keyword">if</span> (!File.Exists(configFile)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> FileNotFoundException(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;configFileName&#125;</span> 配置文件不存在&quot;</span>);<br><br>        <span class="hljs-built_in">string</span> jsonString;<br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> stream = File.OpenRead(configFile))<br>        &#123;<br>            <span class="hljs-keyword">var</span> reader = <span class="hljs-keyword">new</span> StreamReader(stream);<br>            jsonString = <span class="hljs-keyword">await</span> reader.ReadToEndAsync();<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> appSetting = JsonConvert.DeserializeObject&lt;AppSettingConfig&gt;(jsonString);<br><br>        builder<br>            .RegisterInstance(appSetting)<br>            .SingleInstance();<br><br>        <span class="hljs-keyword">return</span> appSetting;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddServices</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> interfaceType = <span class="hljs-keyword">typeof</span>(IBaseService);<br><br>        <span class="hljs-comment">//通过表达式过滤不需要加载的程序集</span><br>        <span class="hljs-keyword">var</span> types =<br>           AppDomain.CurrentDomain.GetReferanceAssemblies(x =&gt; x.FullName.StartsWith(<span class="hljs-string">&quot;ACD.&quot;</span>));<br><br>        <span class="hljs-keyword">var</span> interfaceTypes = types<br>                .SelectMany(s =&gt; s.GetTypes())<br>                .Where(t =&gt; interfaceType.IsAssignableFrom(t)<br>                            &amp;&amp; t.IsClass &amp;&amp; !t.IsAbstract)<br>                .Select(t =&gt; <span class="hljs-keyword">new</span><br>                &#123;<br>                    Service = t.GetInterfaces().FirstOrDefault(),<br>                    Implementation = t<br>                &#125;)<br>                .Where(t =&gt; t.Service != <span class="hljs-literal">null</span><br>                            &amp;&amp; interfaceType.IsAssignableFrom(t.Service));<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> type <span class="hljs-keyword">in</span> interfaceTypes)<br>        &#123;<br>            <span class="hljs-comment">//这里默认为瞬时注入，可根据传入参数决定注入的生命周期</span><br>            <span class="hljs-comment">//或者将IBaseService拆分为三个接口，对应三个不同的生命周期分别注入</span><br>            builder.RegisterType(type.Implementation)<br>                .As(type.Service)<br>                .InstancePerDependency();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> builder;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Client项目中AppInit.cs调用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppInit</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> IContainer Container;<br><br>    <span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> IDisposable BackgroundJobServers;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Init</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>        <span class="hljs-keyword">var</span> config = <span class="hljs-keyword">await</span> builder.AddAppConfig(<span class="hljs-string">&quot;appsettings.json&quot;</span>);<br><br>        BackgroundJobServers = GlobalConfiguration.Configuration.AddHangfireService(config);<br><br>        builder.AddInfrastructure();<br><br>        Container = builder.Build();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">Resolve</span>&lt;<span class="hljs-title">T</span>&gt;()</span> =&gt; Container.Resolve&lt;T&gt;();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs arcade">IHangfireService hangfire = AppInit.Resolve&lt;IHangfireService&gt;();<br><br>hangfire.AddOrUpdate(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">Console</span>.WriteLine(<span class="hljs-string">&quot;hello&quot;</span>), <span class="hljs-string">&quot;*/2 * * * * * &quot;</span>, TimeZoneInfo.Local);<br><br><span class="hljs-comment">//程序终止时通过调用AppInit.BackgroundJobServers?.Dispose()释放资源</span><br><br></code></pre></td></tr></table></figure><p>ACD.Client项目中的配置文件appsettings.json修改如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;HangfireStorage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Data Source=localhost;Initial Catalog = hangfire;User Id = sa;Password = 123456;&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>hangfire可配置项较多，这里只做了持久化的配置，还有其他例如控制面板的路由以及凭证配置等，感兴趣可以参阅hangfire的官方文档或其他资源进一步完善。</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>Autofac</tag>
      
      <tag>Hangfire</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(7.服务自动注入-NLog)</title>
    <link href="/2024/05/20/CsharpAutocad7/"/>
    <url>/2024/05/20/CsharpAutocad7/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><h3 id="自动注入"><a href="#自动注入" class="headerlink" title="自动注入"></a>自动注入</h3><p>项目中需要通过Autofac注入多个服务时，可通过反射机制实现服务的自动注入。<br>实现思路为：定义一个IBaseService接口，所有需要注入的服务都继承此接口，通过反射获取所有继承了IBaseService的服务和其实现类并注入。Microsoft.Extensions.DependencyInjection也可通过此方式实现。</p><p>ACD.Application项目中创建接口文件IBaseService.cs</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-symbol">IBaseService</span> &#123;  &#125;<br><br></code></pre></td></tr></table></figure><p>ACD.Application项目中创建类文件Extensions.AppDomain.cs，封装AppDomain的扩展方法实现通过反射加载引用的程序集</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> partial <span class="hljs-keyword">class</span> <span class="hljs-title class_">Extensions</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">List</span>&lt;<span class="hljs-type">Assembly</span>&gt; <span class="hljs-type">GetReferanceAssemblies</span>(this <span class="hljs-type">AppDomain</span> domain, <span class="hljs-type">Func</span>&lt;<span class="hljs-type">AssemblyName</span>, bool&gt; <span class="hljs-keyword">func</span>)<br>    &#123;<br>        <span class="hljs-keyword">var</span> list <span class="hljs-operator">=</span> new <span class="hljs-type">List</span>&lt;<span class="hljs-type">Assembly</span>&gt;();<br>        domain.<span class="hljs-type">GetAssemblies</span>().<span class="hljs-type">ForEachItem</span>(i <span class="hljs-operator">=&gt;</span><br>        &#123;<br>            <span class="hljs-type">GetReferanceAssemblies</span>(i, list,<span class="hljs-keyword">func</span>);<br>        &#125;);<br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br>    <span class="hljs-keyword">static</span> void <span class="hljs-type">GetReferanceAssemblies</span>(<span class="hljs-type">Assembly</span> assembly, <span class="hljs-type">List</span>&lt;<span class="hljs-type">Assembly</span>&gt; list, <span class="hljs-type">Func</span>&lt;<span class="hljs-type">AssemblyName</span>, bool&gt; <span class="hljs-keyword">func</span>)<br>    &#123;<br>        assembly.<span class="hljs-type">GetReferencedAssemblies</span>().<span class="hljs-type">WhereIF</span>(<span class="hljs-literal">true</span>, <span class="hljs-keyword">func</span>).<span class="hljs-type">ForEachItem</span>(i <span class="hljs-operator">=&gt;</span><br>        &#123;<br>            <span class="hljs-keyword">var</span> ass <span class="hljs-operator">=</span> <span class="hljs-type">Assembly</span>.<span class="hljs-type">Load</span>(i);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-operator">!</span>list.<span class="hljs-type">Contains</span>(ass))<br>            &#123;<br>                list.<span class="hljs-type">Add</span>(ass);<br>                <span class="hljs-type">GetReferanceAssemblies</span>(ass, list,<span class="hljs-keyword">func</span>);<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中的Startup中实现注入方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddInfrastructure</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> builder<br>         .AddServices();<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 配置注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;configFileName&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;FileNotFoundException&quot;&gt;</span><span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;AppSettingConfig&gt; <span class="hljs-title">AddAppConfig</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder,<span class="hljs-built_in">string</span> configFileName = <span class="hljs-string">&quot;appsettings.json&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> configFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, configFileName);<br><br>        <span class="hljs-keyword">if</span> (!File.Exists(configFile)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> FileNotFoundException(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;configFileName&#125;</span> 配置文件不存在&quot;</span>);<br><br>        <span class="hljs-built_in">string</span> jsonString;<br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> stream = File.OpenRead(configFile))<br>        &#123;<br>            <span class="hljs-keyword">var</span> reader = <span class="hljs-keyword">new</span> StreamReader(stream);<br>            jsonString = <span class="hljs-keyword">await</span> reader.ReadToEndAsync();<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> appSetting = JsonConvert.DeserializeObject&lt;AppSettingConfig&gt;(jsonString);<br><br>        builder<br>            .RegisterInstance(appSetting)<br>            .SingleInstance();<br><br>        <span class="hljs-keyword">return</span> appSetting;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 服务注入</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;builder&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ContainerBuilder <span class="hljs-title">AddServices</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> interfaceType = <span class="hljs-keyword">typeof</span>(IBaseService);<br><br>        <span class="hljs-comment">//通过表达式过滤不需要加载的程序集</span><br>        <span class="hljs-keyword">var</span> types =<br>           AppDomain.CurrentDomain.GetReferanceAssemblies(x =&gt; x.FullName.StartsWith(<span class="hljs-string">&quot;ACD.&quot;</span>));<br><br>        <span class="hljs-keyword">var</span> interfaceTypes = types<br>                .SelectMany(s =&gt; s.GetTypes())<br>                .Where(t =&gt; interfaceType.IsAssignableFrom(t)<br>                            &amp;&amp; t.IsClass &amp;&amp; !t.IsAbstract)<br>                .Select(t =&gt; <span class="hljs-keyword">new</span><br>                &#123;<br>                    Service = t.GetInterfaces().FirstOrDefault(),<br>                    Implementation = t<br>                &#125;)<br>                .Where(t =&gt; t.Service != <span class="hljs-literal">null</span><br>                            &amp;&amp; interfaceType.IsAssignableFrom(t.Service));<br><br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> type <span class="hljs-keyword">in</span> interfaceTypes)<br>        &#123;<br>            <span class="hljs-comment">//这里默认为瞬时注入，可根据传入参数决定注入的生命周期</span><br>            <span class="hljs-comment">//或者将IBaseService拆分为三个接口，对应三个不同的生命周期分别注入</span><br>            builder.RegisterType(type.Implementation)<br>                .As(type.Service)<br>                .InstancePerDependency();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> builder;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果要将多个服务按不同的生命周期分别注入，实现思路一样：删除IBaseService.cs接口文件，用三个接口文件例如IScopeService，ITransientService，ISingletonService代替其作用<br>继承自这三个接口的服务分别注入不同的生命周期</p><p>ACD.Client项目中AppInit.cs调用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppInit</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> IContainer Container;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Init</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>        <span class="hljs-keyword">var</span> config = <span class="hljs-keyword">await</span> builder.AddAppConfig(<span class="hljs-string">&quot;appsettings.json&quot;</span>);<br><br>        builder.AddInfrastructure();<br><br>        Container = builder.Build();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">Resolve</span>&lt;<span class="hljs-title">T</span>&gt;()</span> =&gt; Container.Resolve&lt;T&gt;();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="NLog注入为例"><a href="#NLog注入为例" class="headerlink" title="NLog注入为例"></a>NLog注入为例</h3><p>项目ACD.Application中创建接口文件IloggerService.cs,继承自IBaseService</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IloggerService</span>:<span class="hljs-title">IBaseService</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Info</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Info</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg,<span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Warn</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Warn</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg, <span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Error</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Error</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg, <span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>项目ACD.Infrastructure中创建类文件LoggerService.cs，实现自IloggerService</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">LoggerService</span> : <span class="hljs-title">IloggerService</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> ILogger _logger;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">LoggerService</span>(<span class="hljs-params">ILogger logger</span>)</span><br>    &#123;<br>        _logger = logger;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Error</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>=&gt;_logger.Error(msg);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Error</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg, <span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span> =&gt; _logger.Error(msg, args);<br>    <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Info</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>=&gt;_logger.Info(msg);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Info</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg, <span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span>=&gt;_logger.Info(msg, args);<br>   <br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Warn</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg</span>)</span>=&gt;_logger.Warn(msg);<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Warn</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> msg, <span class="hljs-keyword">params</span> <span class="hljs-built_in">object</span>[] args</span>)</span> =&gt; _logger.Warn(msg, args);<br>   <br>&#125;<br></code></pre></td></tr></table></figure><p>项目ACD.Infrastructure中Startup.cs静态类中的AddInfrastructure方法添加以下代码,注入NLog模块</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">builder.RegisterModule&lt;NLogModule&gt;()<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>修改后</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> ContainerBuilder <span class="hljs-title">AddInfrastructure</span><span class="hljs-params">(<span class="hljs-keyword">this</span> ContainerBuilder builder)</span></span><br><span class="hljs-function"></span>&#123;<br>    builder.<span class="hljs-built_in">RegisterModule</span>&lt;NLogModule&gt;();<br><br>    <span class="hljs-keyword">return</span> builder<br>     .<span class="hljs-built_in">AddServices</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>至此IloggerService已注入完成，使用方法同步骤6.配置文件注入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//C/S端：</span><br><br><span class="hljs-keyword">await</span> AppInit.Init();<br><br><span class="hljs-comment">//B/S端：</span><br><br>将AppInit中的内容在Global.asax中或ApplicationStart中实现<br><br><span class="hljs-comment">//使用</span><br><br>IloggerService _logger = AppInit.Resolve&lt;IloggerService&gt;();<br>_logger.Error(<span class="hljs-string">&quot;hello&quot;</span>);<br><br><span class="hljs-comment">//or</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDesign</span><br>&#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IloggerService _logger;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDesign</span>(<span class="hljs-params">IloggerService logger</span>)</span> =&gt; _logger = logger;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Demo</span>()</span><br>   &#123;<br>       <span class="hljs-comment">// _logger.Error(&quot;hello&quot;);</span><br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>NLog需要单独的配置文件，ACD.Client创建nlog.config，配置文件内容网上资料很多，示例：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">nlog</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">targets</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--此部分中的所有目标将自动异步--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">target</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;asyncFile&quot;</span> <span class="hljs-attr">xsi:type</span>=<span class="hljs-string">&quot;AsyncWrapper&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--项目日志保存文件路径说明fileName=&quot;$</span></span><span class="hljs-template-variable">&#123;basedir&#125;</span><span class="language-xml"><span class="hljs-comment">/保存目录，以年月日的格式创建/$</span></span><span class="hljs-template-variable">&#123;shortdate&#125;</span><span class="language-xml"><span class="hljs-comment">/$</span></span><span class="hljs-template-variable">&#123;记录器名称&#125;</span><span class="language-xml"><span class="hljs-comment">-$</span></span><span class="hljs-template-variable">&#123;单级记录&#125;</span><span class="language-xml"><span class="hljs-comment">-$</span></span><span class="hljs-template-variable">&#123;shortdate&#125;</span><span class="language-xml"><span class="hljs-comment">.txt&quot;--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">target</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;log_file&quot;</span> <span class="hljs-attr">xsi:type</span>=<span class="hljs-string">&quot;File&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">fileName</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;basedir&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">/ACDesignLogs/$</span></span></span><span class="hljs-template-variable">&#123;shortdate&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">/$</span></span></span><span class="hljs-template-variable">&#123;level&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">-$</span></span></span><span class="hljs-template-variable">&#123;shortdate&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">.txt&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;longdate&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> | $</span></span></span><span class="hljs-template-variable">&#123;message&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> $</span></span></span><span class="hljs-template-variable">&#123;onexception:$&#123;exception:format=message&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> $</span></span></span><span class="hljs-template-variable">&#123;newline&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> $</span></span></span><span class="hljs-template-variable">&#123;stacktrace&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> $</span></span></span><span class="hljs-template-variable">&#123;newline&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">archiveFileName</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;basedir&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">/archives/$</span></span></span><span class="hljs-template-variable">&#123;level&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">-$</span></span></span><span class="hljs-template-variable">&#123;shortdate&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">-</span></span></span><span class="hljs-template-tag">&#123;#####&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">.txt&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">archiveAboveSize</span>=<span class="hljs-string">&quot;102400&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">archiveNumbering</span>=<span class="hljs-string">&quot;Sequence&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">concurrentWrites</span>=<span class="hljs-string">&quot;true&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml"><span class="hljs-attr">keepFileOpen</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--使用可自定义的着色将日志消息写入控制台--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">target</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;colorConsole&quot;</span> <span class="hljs-attr">xsi:type</span>=<span class="hljs-string">&quot;ColoredConsole&quot;</span> <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;[$</span></span></span><span class="hljs-template-variable">&#123;date:format=HH\:mm\:ss&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">]:$</span></span></span><span class="hljs-template-variable">&#123;message&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string"> $</span></span></span><span class="hljs-template-variable">&#123;exception:format=message&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">targets</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--规则配置,final - 最终规则匹配后不处理任何规则--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">rules</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Microsoft.*&quot;</span> <span class="hljs-attr">minlevel</span>=<span class="hljs-string">&quot;Info&quot;</span> <span class="hljs-attr">writeTo</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">final</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;*&quot;</span> <span class="hljs-attr">minlevel</span>=<span class="hljs-string">&quot;Info&quot;</span> <span class="hljs-attr">writeTo</span>=<span class="hljs-string">&quot;asyncFile&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;*&quot;</span> <span class="hljs-attr">minlevel</span>=<span class="hljs-string">&quot;Warn&quot;</span> <span class="hljs-attr">writeTo</span>=<span class="hljs-string">&quot;colorConsole&quot;</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">rules</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">nlog</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>Autofac</tag>
      
      <tag>NLog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(6.配置文件注入)</title>
    <link href="/2024/05/20/CsharpAutocad6/"/>
    <url>/2024/05/20/CsharpAutocad6/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>通过Autofac注入.json配置文件，首先在ACD.Domain项目中创建配置文件实体，新建类文件AppSettingConfig.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 配置项</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppSettingConfig</span><br>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Infrastructure项目中创建类文件Startup.cs，实现配置文件的单例注入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Startup</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;AppSettingConfig&gt; <span class="hljs-title">AddAppConfig</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ContainerBuilder builder,<span class="hljs-built_in">string</span> configFileName = <span class="hljs-string">&quot;appsettings.json&quot;</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> configFile = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, configFileName);<br><br>        <span class="hljs-keyword">if</span> (!File.Exists(configFile)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> FileNotFoundException(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;configFileName&#125;</span> 配置文件不存在&quot;</span>);<br><br>        <span class="hljs-built_in">string</span> jsonString;<br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">var</span> stream = File.OpenRead(configFile))<br>        &#123;<br>            <span class="hljs-keyword">var</span> reader = <span class="hljs-keyword">new</span> StreamReader(stream);<br>            jsonString = <span class="hljs-keyword">await</span> reader.ReadToEndAsync();<br>        &#125;<br><br>        <span class="hljs-keyword">var</span> appSetting = JsonConvert.DeserializeObject&lt;AppSettingConfig&gt;(jsonString);<br><br>        builder<br>            .RegisterInstance(appSetting)<br>            .SingleInstance();<br><br>        <span class="hljs-keyword">return</span> appSetting;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>ACD.Client项目中添加appsettings.json配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;<br>  <span class="hljs-regexp">//</span><span class="hljs-string">&quot;DbConfig&quot;</span>: <span class="hljs-string">&quot;123123&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Client项目中添加类文件AppInit.cs，通过Autofac注入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">class</span> <span class="hljs-title">AppInit</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> IContainer Container;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Init</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> builder = <span class="hljs-keyword">new</span> ContainerBuilder();<br><br>        <span class="hljs-keyword">var</span> config = <span class="hljs-keyword">await</span> builder.AddAppConfig(<span class="hljs-string">&quot;appsettings.json&quot;</span>);<br><br>        Container = builder.Build();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">internal</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">Resolve</span>&lt;<span class="hljs-title">T</span>&gt;()</span> =&gt; Container.Resolve&lt;T&gt;();<br>&#125;<br></code></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs arduino">   <br><span class="hljs-comment">//C/S端：</span><br><br>await AppInit.<span class="hljs-built_in">Init</span>();<br><br><span class="hljs-comment">//B/S端：</span><br><br>将AppInit中的内容在Global.asax中或ApplicationStart中实现<br><br><span class="hljs-comment">//使用</span><br><br>AppSettingConfig config = AppInit.<span class="hljs-built_in">Resolve</span>&lt;AppSettingConfig&gt;();<br><br><span class="hljs-comment">//or</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ACDesign</span><br>&#123;<br>   <span class="hljs-keyword">private</span> readonly AppSettingConfig _config;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDesign</span><span class="hljs-params">(AppSettingConfig config)</span> </span>=&gt; _config = config;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">void</span> <span class="hljs-title">Demo</span><span class="hljs-params">()</span></span><br><span class="hljs-function">   </span>&#123;<br>       <span class="hljs-comment">// var dbConfig =  _config.DbConfig;_</span><br>   &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>Autofac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(5.图形镜像)</title>
    <link href="/2024/05/20/CsharpAutocad5/"/>
    <url>/2024/05/20/CsharpAutocad5/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>部分场景需要将图形中的内容根据x轴或y轴，甚至自定义的对称轴进行镜像，这时需要依照目标图形以及对称轴生成镜像图形。</p><p>ACD.CadCore项目中创建Extensions.Autodesk.cs类文件，封装镜像扩展方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Extensions</span><br>   &#123;<br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 镜像图形</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;ent&quot;&gt;</span>图形对象的ObjectId<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;point1&quot;&gt;</span>第一个镜像点<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;point2&quot;&gt;</span>第二个镜像点<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;isEraseSource&quot;&gt;</span>是否删除原图形<span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span>返回新的图形对象  没有加入图形数据库的情况<span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Entity <span class="hljs-title">MirrorEntity</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> Entity ent, Point3d point1, Point3d point2, <span class="hljs-built_in">bool</span> isEraseSource</span>)</span><br>&#123;<br><br><span class="hljs-comment">// 声明一个图形对象用于返回</span><br>Entity entR;<br><br><span class="hljs-keyword">if</span> (ent.IsNewObject == <span class="hljs-literal">true</span>)<br>&#123;<br><span class="hljs-comment">// 计算镜像的变换矩阵</span><br>Matrix3d mt = Matrix3d.Mirroring(<span class="hljs-keyword">new</span> Line3d(point1, point2));<br>entR = ent.GetTransformedCopy(mt);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>entR = ent.ObjectId.MirrorEntity(point1, point2, isEraseSource);<br>&#125;<br><span class="hljs-keyword">return</span> entR;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Entity <span class="hljs-title">MirrorEntity</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> ObjectId entId, Point3d point1, Point3d point2, <span class="hljs-built_in">bool</span> isEraseSource</span>)</span><br>&#123;<br><span class="hljs-comment">// 声明一个图形对象用于返回</span><br>Entity entR;<br><span class="hljs-comment">// 计算镜像的变换矩阵</span><br>Matrix3d mt = Matrix3d.Mirroring(<span class="hljs-keyword">new</span> Line3d(point1, point2));<br><span class="hljs-comment">// 打开事务处理</span><br><span class="hljs-keyword">using</span> (Transaction trans = entId.Database.TransactionManager.StartTransaction())<br>&#123;<br><span class="hljs-comment">// 判断是否删除原对象</span><br><span class="hljs-keyword">if</span> (isEraseSource)<br>&#123;<br><span class="hljs-comment">// 打开原对象</span><br>Entity ent = (Entity)trans.GetObject(entId, OpenMode.ForWrite);<br><span class="hljs-comment">// 执行变换</span><br>ent.TransformBy(mt);<br>entR = ent;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><br><span class="hljs-comment">// 打开原对象</span><br>Entity ent = (Entity)trans.GetObject(entId, OpenMode.ForRead);<br>entR = ent.GetTransformedCopy(mt);<br>&#125;<br><span class="hljs-keyword">return</span> entR;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>接着在ACD.CadCore项目中创建ACDOperation.Reverse.cs类文件，实现镜像操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDOperation</span><br>   &#123;<br>       <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Reverse</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> originalFullPath, <span class="hljs-built_in">string</span> reverseFullPath, Point3d point1, Point3d point2</span>)</span><br>       &#123;<br>           <span class="hljs-keyword">if</span> (!File.Exists(originalFullPath)) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br><br>           <span class="hljs-keyword">if</span> (File.Exists(reverseFullPath)) <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br><br>           <span class="hljs-keyword">try</span><br>           &#123;<br>               <span class="hljs-built_in">string</span> directoryPath = Path.GetDirectoryName(reverseFullPath);<br>               <span class="hljs-keyword">if</span> (!Directory.Exists(directoryPath)) Directory.CreateDirectory(directoryPath);<br><br>               File.Copy(originalFullPath, reverseFullPath);<br>           &#125;<br>           <span class="hljs-keyword">catch</span> (IOException)<br>           &#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>           &#125;<br><br>           <span class="hljs-keyword">using</span> (Database wblockDb = <span class="hljs-keyword">new</span> Database(<span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>))<br>           &#123;<br>               <span class="hljs-keyword">try</span><br>               &#123;<br>                   wblockDb.ReadDwgFile(reverseFullPath, FileOpenMode.OpenForReadAndWriteNoShare, <span class="hljs-literal">true</span>, <span class="hljs-literal">null</span>);<br>                   wblockDb.CloseInput(<span class="hljs-literal">true</span>);<br><br>                   <span class="hljs-keyword">using</span> (Transaction tr = wblockDb.TransactionManager.StartTransaction())<br>                   &#123;<br>                       BlockTable currblockTable = tr.GetObject(wblockDb.BlockTableId, OpenMode.ForRead) <span class="hljs-keyword">as</span> BlockTable;<br><br>                       BlockTableRecord currblockTableRecord = tr.GetObject(currblockTable[BlockTableRecord.ModelSpace], OpenMode.ForWrite) <span class="hljs-keyword">as</span> BlockTableRecord;<br><br>                       <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> currblockTableRecord)<br>                       &#123;<br>                           Entity entity = tr.GetObject(item, OpenMode.ForWrite) <span class="hljs-keyword">as</span> Entity;<br><br>                           <span class="hljs-keyword">if</span> (entity <span class="hljs-keyword">is</span> Dimension)<br>                           &#123;<br>                               <span class="hljs-keyword">var</span> dimension = entity <span class="hljs-keyword">as</span> Dimension;<br>                               <span class="hljs-keyword">var</span> normal = dimension.Normal;<br>                               dimension.MirrorEntity(point1, point2, <span class="hljs-literal">true</span>);<br>                               dimension.Normal = normal;<br>                           &#125;<br>                           <span class="hljs-keyword">else</span><br>                           &#123;<br>                               entity.MirrorEntity(point1, point2, <span class="hljs-literal">true</span>);<br>                           &#125;<br>                       &#125;<br>                       tr.Commit();<br>                   &#125;<br>                   wblockDb.SaveAs(reverseFullPath, DwgVersion.Current);<br>               &#125;<br>               <span class="hljs-keyword">catch</span> (Exception)<br>               &#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>               &#125;<br>           &#125;<br>           <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>       &#125;<br>   &#125;<br><br></code></pre></td></tr></table></figure><p>通过originalFullPath文件路径，读取目标图形，将目标图形中的所有对象依次执行镜像操作，最后提交事物，保存新的图形文件到reverseFullPath。<br>镜像后，其中Dimension标注对象会存在标注内容颠倒的问题，需要特殊处理</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(4.块的移动)</title>
    <link href="/2024/05/20/CsharpAutocad4/"/>
    <url>/2024/05/20/CsharpAutocad4/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>一般情况下，如果需要移动快，只需要改变块的插入坐标值，那么块的插入位置自然而然的就会发生变化，但是在某些特殊场景，我们需要基于块原来的位置，通过偏移的坐标量来移动块，这时需要额外的特殊处理，因此我们需要先找到目标块，接着修改目标块的坐标位置为新的坐标。</p><p>在步骤2.块的插入中，”插入块类”InsertBlockParam的基础之上添加字段BlockId，用于块的唯一标识，由业务赋值。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 插入块类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">InsertBlockParam</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 图层名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> LayerName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> BlockName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块物理路径</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> BlockPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块插入坐标</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> ACDPoint3D InsertPoint &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> Guid BlockId &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">InsertBlockParam</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">InsertBlockParam</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> layerName, <span class="hljs-built_in">string</span> blockName, <span class="hljs-built_in">string</span> blockPath, ACDPoint3D insertPoint, Guid blockId</span>)</span><br>    &#123;<br>        LayerName = layerName;<br>        BlockName = blockName;<br>        BlockPath = blockPath;<br>        InsertPoint = insertPoint;<br>        BlockId = blockId;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>“点位类”ACDPoint3D实现IEquatable<ACDPoint3D>，重写Equals方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 点位类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDPoint3D</span>:<span class="hljs-title">IEquatable</span>&lt;<span class="hljs-title">ACDPoint3D</span>&gt;<br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> X &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Y &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Z &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDPoint3D</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDPoint3D</span>(<span class="hljs-params"><span class="hljs-built_in">double</span> x, <span class="hljs-built_in">double</span> y, <span class="hljs-built_in">double</span> z</span>)</span><br>    &#123;<br>        X = x;<br>        Y = y;<br>        Z = z;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">Equals</span>(<span class="hljs-params">ACDPoint3D other</span>)</span><br>        =&gt; X == other.X &amp;&amp; Y == other.Y &amp;&amp; Z == other.Z;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.CadCore项目中创建类文件ACDOperation.MoveBlock.cs，实现块的移动操作。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> partial <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">ACDOperation</span></span><br><span class="hljs-title class_"></span>&#123;<br>    <span class="hljs-keyword">public</span> bool MoveBlock(string dwgFilePath, string <span class="hljs-keyword">new</span><span class="hljs-type">FilePath</span>, IEnumerable&lt;InsertBlockParam&gt; blockOldPositions, IEnumerable&lt;InsertBlockParam&gt; blockNewPositions)<br>    &#123;<br>        bool result = <span class="hljs-literal">true</span>;<br><br>        CheckFilePath(dwgFilePath, <span class="hljs-keyword">new</span><span class="hljs-type">FilePath</span>);<br><br>        File.Copy(dwgFilePath, <span class="hljs-keyword">new</span><span class="hljs-type">FilePath</span>, <span class="hljs-literal">true</span>);<br><br>        <span class="hljs-keyword">using</span> (Database blockDb = <span class="hljs-keyword">new</span> <span class="hljs-type">Database</span>(<span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>))<br>        &#123;<br>            blockDb.ReadDwgFile(<span class="hljs-keyword">new</span><span class="hljs-type">FilePath</span>, FileOpenMode.OpenForReadAndWriteNoShare, <span class="hljs-literal">true</span>, <span class="hljs-literal">null</span>);<br>            blockDb.CloseInput(<span class="hljs-literal">true</span>);<br><br>            result = MoveBlock(blockDb, blockOldPositions, blockNewPositions);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!result) File.Delete(<span class="hljs-keyword">new</span><span class="hljs-type">FilePath</span>);<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> bool MoveBlock(IDynamicMetaObjectProvider database, IEnumerable&lt;InsertBlockParam&gt; blockOldPositions, IEnumerable&lt;InsertBlockParam&gt; blockNewPositions)<br>    &#123;<br>        bool result = <span class="hljs-literal">true</span>;<br><br>        ACDPoint3D blockRefPoint;<br>        BlockTable currblockTable;<br>        BlockReference blockReference;<br>        BlockTableRecord currblockTableRecord;<br><br>        Database currdb = database as Database;<br><br>        <span class="hljs-keyword">using</span> (Transaction currentTrans = currdb.TransactionManager.StartTransaction())<br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                currblockTable = currentTrans.GetObject(currdb.BlockTableId, OpenMode.ForRead) as BlockTable;<br><br>                currblockTableRecord = currentTrans.GetObject(currblockTable[BlockTableRecord.ModelSpace], OpenMode.ForRead) as BlockTableRecord;<br><br>                InsertBlockParam oldBlockPostion, <span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span>;<br>                foreach (<span class="hljs-keyword">var</span> record <span class="hljs-keyword">in</span> currblockTableRecord)<br>                &#123;<br>                    <span class="hljs-keyword">var</span> entity = currentTrans.GetObject(record, OpenMode.ForWrite);<br>                    <span class="hljs-keyword">if</span> (entity <span class="hljs-keyword">is</span> BlockReference)<br>                    &#123;<br>                        blockReference = entity as BlockReference;<br>                        blockRefPoint = <span class="hljs-keyword">new</span> <span class="hljs-type">ACDPoint3D</span>(blockReference.Position.X, blockReference.Position.Y, blockReference.Position.Z);<br><br>                        oldBlockPostion = blockOldPositions.FirstOrDefault(x =&gt;x.InsertPoint.Equals(blockRefPoint));<br>                        <br>                        <span class="hljs-keyword">if</span> (oldBlockPostion != <span class="hljs-literal">null</span>)<br>                        &#123;<br>                            <span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span> = blockNewPositions.FirstOrDefault(x =&gt; x.BlockId == oldBlockPostion.BlockId);<br>                            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span> != <span class="hljs-literal">null</span>)<br>                            &#123;<br>                                blockReference.Position = <span class="hljs-keyword">new</span> <span class="hljs-type">Point3d</span>(<span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span>.InsertPoint.X, <span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span>.InsertPoint.Y, <span class="hljs-keyword">new</span><span class="hljs-type">BlockPosition</span>.InsertPoint.Z);<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>                currentTrans.Commit();<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception)<br>            &#123;<br>                currentTrans.Abort();<br>                result = <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>blockOldPositions来自上一次插入块时的执行参数，通过上一次插入块时的坐标位置找到目标块，再通过目标块的BlockId，在blockNewPositions中找到目标块对应的新的参数，将目标块的Position重新赋值，最后提交事物。</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(3.连线绘制)</title>
    <link href="/2024/05/20/CsharpAutocad3/"/>
    <url>/2024/05/20/CsharpAutocad3/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>开始绘制连线操作之前，首先在ACD.Domain项目中创建”点位类”(步骤2中已创建，这里略),”连线类”。两点确认一条直线，所有连线类中需要有两个点位，同插入块的操作一样，线条也需要绘制到指定的图层，线条具有不同的类型，比如：线性标注，普通的轮廓线等。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csharp"> <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 连线类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">LinkLineParam</span><br>&#123;<br>    <span class="hljs-keyword">public</span> LineType LineType &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> ACDPoint3D StartPoint &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> ACDPoint3D EndPoint &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 图层名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> LayerName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 标注偏移方向和单位</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> DimPosition &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">LinkLineParam</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">LinkLineParam</span> (<span class="hljs-params">LineType lineType, ACDPoint3D startPoint, ACDPoint3D endPoint, <span class="hljs-built_in">string</span> layerName, <span class="hljs-built_in">double</span> dimPosition</span>)</span><br>    &#123;<br>        LineType = lineType;<br>        StartPoint = startPoint;<br>        EndPoint = endPoint;<br>        LayerName = layerName;<br>        DimPosition = dimPosition;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>LineType枚举类型</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br> <span class="hljs-comment"><span class="hljs-doctag">///</span> 线条类型</span><br> <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br> <span class="hljs-keyword">public</span> <span class="hljs-built_in">enum</span> LineType<br> &#123;<br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>     [<span class="hljs-meta">Description(<span class="hljs-string">&quot;轮廓线&quot;</span>)</span>]<br>     BlockLinkLine=<span class="hljs-number">0</span>,<br><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>     [<span class="hljs-meta">Description(<span class="hljs-string">&quot;标注线&quot;</span>)</span>]<br>     DimensionLine,<br><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> </span><br>     <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>     [<span class="hljs-meta">Description(<span class="hljs-string">&quot;折痕线&quot;</span>)</span>]<br>     CreaseLine<br> &#125;<br></code></pre></td></tr></table></figure><p>ACD.CadCore项目中创建类文件ACDOperation.LinkLine.cs，实现连线操作。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-built_in">public</span> partial <span class="hljs-keyword">class</span> ACDOperation<br>&#123;<br>    <span class="hljs-built_in">public</span> <span class="hljs-type">bool</span> LinkLine(string dwgFilePath, string newFilePath, IEnumerable&lt;LinkLineParam&gt; lines)<br>    &#123;<br>        <span class="hljs-type">bool</span> result = <span class="hljs-keyword">true</span>;<br><br>        CheckFilePath(dwgFilePath, newFilePath);<br><br>        File.<span class="hljs-keyword">Copy</span>(dwgFilePath, newFilePath, <span class="hljs-keyword">true</span>);<br><br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">Database</span> blockDb = <span class="hljs-built_in">new</span> <span class="hljs-keyword">Database</span>(<span class="hljs-keyword">false</span>, <span class="hljs-keyword">true</span>))<br>        &#123;<br>            blockDb.ReadDwgFile(newFilePath, FileOpenMode.OpenForReadAndWriteNoShare, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">null</span>);<br>            blockDb.CloseInput(<span class="hljs-keyword">true</span>);<br><br>            result = LinkLine(blockDb, lines);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!result) File.<span class="hljs-keyword">Delete</span>(newFilePath);<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-built_in">public</span> <span class="hljs-type">bool</span> LinkLine(IDynamicMetaObjectProvider <span class="hljs-keyword">database</span>, IEnumerable&lt;LinkLineParam&gt; lines)<br>    &#123;<br>        <span class="hljs-type">bool</span> result = <span class="hljs-keyword">true</span>;<br><br>        <span class="hljs-type">Line</span> <span class="hljs-type">line</span>;<br>        LayerTable layers;<br>        LayerTableRecord layer = <span class="hljs-keyword">null</span>;<br>        Point3d startPoint, endPoint;<br><br>        <span class="hljs-keyword">Database</span> curDb = <span class="hljs-keyword">database</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">Database</span>;<br><br>        <span class="hljs-keyword">using</span> (<span class="hljs-keyword">Transaction</span> curTrans = curDb.TransactionManager.StartTransaction())<br>        &#123;<br>            try<br>            &#123;<br>                layers = curTrans.GetObject(curDb.LayerTableId, OpenMode.ForRead) <span class="hljs-keyword">as</span> LayerTable;<br><br>                BlockTableRecord curSpace = curTrans.GetObject(curDb.CurrentSpaceId, OpenMode.ForWrite) <span class="hljs-keyword">as</span> BlockTableRecord;<br><br>               <br>                <span class="hljs-keyword">foreach</span> (var param <span class="hljs-keyword">in</span> lines)<br>                &#123;<br>                    endPoint = <span class="hljs-built_in">new</span> Point3d(param.EndPoint.X, param.EndPoint.Y, param.EndPoint.Z);<br>                    startPoint = <span class="hljs-built_in">new</span> Point3d(param.StartPoint.X, param.StartPoint.Y, param.StartPoint.Z);<br><br>                    <span class="hljs-keyword">if</span> (layers.Has(param.LayerName))<br>                    &#123;<br>                        layer = curTrans.GetObject(layers[param.LayerName], OpenMode.ForWrite) <span class="hljs-keyword">as</span> LayerTableRecord;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (param.LineType == LineType.DimensionLine)<br>                    &#123;<br>                        //线性标注<br>                        AlignedDimension dimension = <span class="hljs-built_in">new</span> AlignedDimension();<br>                        dimension.XLine1Point = startPoint;<br>                        dimension.XLine2Point = endPoint;<br>                        dimension.DimLinePoint = GetDimLinePoint(startPoint, endPoint,param.DimPosition);<br><br>                        <span class="hljs-keyword">if</span> (!layer.<span class="hljs-keyword">IsNull</span>()) dimension.LayerId = layer.Id;<br><br>                        curSpace.AppendEntity(dimension);<br>                        curTrans.AddNewlyCreatedDBObject(dimension, <span class="hljs-keyword">true</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">else</span><br>                    &#123;<br>                        //轮廓线<br>                        <span class="hljs-type">line</span> = <span class="hljs-built_in">new</span> Line(startPoint, endPoint);<br><br>                        <span class="hljs-keyword">if</span> (!layer.<span class="hljs-keyword">IsNull</span>()) <span class="hljs-type">line</span>.LayerId = layer.Id;<br><br>                        curSpace.AppendEntity(<span class="hljs-type">line</span>);<br>                        curTrans.AddNewlyCreatedDBObject(<span class="hljs-type">line</span>, <span class="hljs-keyword">true</span>);<br>                    &#125;<br>                &#125;<br>                curTrans.<span class="hljs-keyword">Commit</span>();<br>            &#125;<br>            catch (Autodesk.AutoCAD.Runtime.<span class="hljs-keyword">Exception</span>)<br>            &#123;<br>                curTrans.<span class="hljs-keyword">Abort</span>();<br>                result = <span class="hljs-keyword">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    private Point3d GetDimLinePoint(Point3d startPoint, Point3d endPoint, <span class="hljs-type">double</span> dimPosition)<br>    &#123;<br>        <span class="hljs-type">double</span> x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>, z = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-type">double</span> maxY = Math.Max(endPoint.Y, startPoint.Y);<br>        <span class="hljs-type">double</span> minY = Math.Min(endPoint.Y, startPoint.Y);<br>        <span class="hljs-type">double</span> balanceY = maxY - minY;<br>        <span class="hljs-keyword">if</span> (balanceY != <span class="hljs-number">0</span>)<br>        &#123;<br>            x = endPoint.X + dimPosition;<br>            y = minY + balanceY / <span class="hljs-number">2</span>d;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">new</span> Point3d(x, y, z);<br>        &#125;<br><br>        <span class="hljs-type">double</span> maxX = Math.Max(endPoint.X, startPoint.X);<br>        <span class="hljs-type">double</span> minX = Math.Min(endPoint.X, startPoint.X);<br>        <span class="hljs-type">double</span> balanceX = maxX - minX;<br>        <span class="hljs-keyword">if</span> (balanceX != <span class="hljs-number">0</span>)<br>        &#123;<br>            y = endPoint.Y + dimPosition;<br>            x = minX + balanceX / <span class="hljs-number">2</span>d;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">new</span> Point3d(x, y, z);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">new</span> Point3d(x, y, z);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>连线操作也是在当前工作文档空间中完成，普通的轮廓线需要创建一根线条，确定线条两点的具体坐标，并指定绘制的图层，接着将线条追加到当前文档空间中。标注线条额外需要确定标注文本内容的所在位置，这里通过GetDimLinePoint()方法传递连线两点的坐标计算出一个平均值赋予标注文本内容的坐标</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(2.块的插入)</title>
    <link href="/2024/05/20/CsharpAutocad2/"/>
    <url>/2024/05/20/CsharpAutocad2/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>开始之前确保已完成步骤1创建解决方案和类库项目，并在对应项目中安装nuget包</p>          </div><p>开始插入块操作之前，首先在ACD.Domain项目中创建”点位类”，”插入块类”。Autocad中所有图形绘制以及操作都基于点位，插入块也需要一个插入点，以及插入块的块文件，并且在插入时也需要指定将该块插入到某一图层</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"> <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 点位类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDPoint3D</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> X &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Y &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Z &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDPoint3D</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ACDPoint3D</span>(<span class="hljs-params"><span class="hljs-built_in">double</span> x, <span class="hljs-built_in">double</span> y, <span class="hljs-built_in">double</span> z</span>)</span><br>    &#123;<br>        X = x;<br>        Y = y;<br>        Z = z;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 插入块类</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">InsertBlockParam</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 图层名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> LayerName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块名称</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> BlockName &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125; <br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块物理路径</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> BlockPath &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 块插入坐标</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-keyword">public</span> ACDPoint3D InsertPoint &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">InsertBlockParam</span>()</span> &#123; &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">InsertBlockParam</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> layerName, <span class="hljs-built_in">string</span> blockName, <span class="hljs-built_in">string</span> blockPath, ACDPoint3D insertPoint</span>)</span><br>    &#123;<br>        LayerName = layerName;<br>        BlockName = blockName;<br>        BlockPath = blockPath;<br>        InsertPoint = insertPoint;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.Application项目中封装常用的扩展方法，新建类文件Extensions.Validate.cs内容如下，partial修饰为分部类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Extensions</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 检测对象是否为null</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj&quot;&gt;</span>对象<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsNull</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> <span class="hljs-built_in">object</span> obj</span>)</span> =&gt; obj == <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 是否为空</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;value&quot;&gt;</span>值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsEmpty</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> <span class="hljs-built_in">string</span> <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">string</span>.IsNullOrWhiteSpace(<span class="hljs-keyword">value</span>);<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 是否为空</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;value&quot;&gt;</span>值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsEmpty</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> Guid <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">value</span> == Guid.Empty;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 是否为空</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;value&quot;&gt;</span>值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsEmpty</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> Guid? <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">value</span> == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">value</span> == Guid.Empty;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 是否为空</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;value&quot;&gt;</span>值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">IsEmpty</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params"><span class="hljs-keyword">this</span> IEnumerable&lt;T&gt; <span class="hljs-keyword">value</span></span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">value</span> == <span class="hljs-literal">null</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">return</span> !<span class="hljs-keyword">value</span>.Any();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>ACD.CadCore项目中创建ACDOperation.cs类文件，通过partial修饰为分部类，并实现为单例模式</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDOperation</span> <br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">ACDOperation</span>()</span> &#123; &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ACDOperation _instance = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">readonly</span> <span class="hljs-built_in">object</span> _locker = <span class="hljs-keyword">new</span> <span class="hljs-built_in">object</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ACDOperation Instance<br>    &#123;<br>        <span class="hljs-keyword">get</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (_instance == <span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">lock</span> (_locker)<br>                &#123;<br>                    <span class="hljs-keyword">if</span> (_instance == <span class="hljs-literal">null</span>)<br>                    &#123;<br>                        _instance = <span class="hljs-keyword">new</span> ACDOperation();<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">return</span> _instance;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 校验路径</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;dwgFilePath&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;newFilePath&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;exception cref=&quot;NotFoundException&quot;&gt;</span><span class="hljs-doctag">&lt;/exception&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">CheckFilePath</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> dwgFilePath, <span class="hljs-built_in">string</span> newFilePath</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (!File.Exists(dwgFilePath)) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotFoundException(<span class="hljs-string">$&quot;文件<span class="hljs-subst">&#123;dwgFilePath&#125;</span>不存在&quot;</span>);<br><br>        <span class="hljs-built_in">string</span> directoryPath = Path.GetDirectoryName(newFilePath);<br><br>        <span class="hljs-keyword">if</span> (!Directory.Exists(directoryPath)) Directory.CreateDirectory(directoryPath);<br>    &#125;<br>&#125;<br> <br></code></pre></td></tr></table></figure><p>ACD.CadCore项目中接着创建ACDOperation.InsertBlock.cs类文件，实现Autocad插入块的操作</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">partial</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ACDOperation</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">InsertBlock</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> dwgFilePath, <span class="hljs-built_in">string</span> newFilePath, IEnumerable&lt;InsertBlockParam&gt; blocks</span>)</span><br>    &#123;<br>        <span class="hljs-built_in">bool</span> result = <span class="hljs-literal">true</span>;<br><br>        CheckFilePath(dwgFilePath, newFilePath);<br><br>        File.Copy(dwgFilePath, newFilePath, <span class="hljs-literal">true</span>);<br><br>        <span class="hljs-keyword">using</span> (Database blockDb = <span class="hljs-keyword">new</span> Database(<span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>))<br>        &#123;<br>            blockDb.ReadDwgFile(newFilePath, FileOpenMode.OpenForReadAndWriteNoShare, <span class="hljs-literal">true</span>, <span class="hljs-literal">null</span>);<br>            blockDb.CloseInput(<span class="hljs-literal">true</span>);<br><br>            result = InsertBlock(blockDb, blocks);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (!result) File.Delete(newFilePath);<br><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> <span class="hljs-title">InsertBlock</span>(<span class="hljs-params">IDynamicMetaObjectProvider database, IEnumerable&lt;InsertBlockParam&gt; blocks</span>)</span><br>    &#123;<br>        <span class="hljs-built_in">bool</span> result = <span class="hljs-literal">true</span>;<br><br>        LayerTable layers;<br>        Database wblockDb;<br>        ObjectId wblockId;<br>        Point3d insertPoint;<br>        BlockTable currblockTable;<br>        LayerTableRecord layer;<br>        BlockReference blockReference;<br>        BlockTableRecord currblockTableRecord;<br><br>        Database currdb = database <span class="hljs-keyword">as</span> Database;<br><br>        <span class="hljs-comment">// 启动事务</span><br>        <span class="hljs-keyword">using</span> (Transaction currtransaction = currdb.TransactionManager.StartTransaction())<br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                currblockTable = currtransaction.GetObject(currdb.BlockTableId, OpenMode.ForRead) <span class="hljs-keyword">as</span> BlockTable;<br><br>                currblockTableRecord = currtransaction.GetObject(currblockTable[BlockTableRecord.ModelSpace], OpenMode.ForWrite) <span class="hljs-keyword">as</span> BlockTableRecord;<br><br>                layers = currtransaction.GetObject(currdb.LayerTableId, OpenMode.ForRead) <span class="hljs-keyword">as</span> LayerTable;<br><br>                <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> param <span class="hljs-keyword">in</span> blocks)<br>                &#123;<br>                    <span class="hljs-keyword">using</span> (wblockDb = <span class="hljs-keyword">new</span> Database(<span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>))<br>                    &#123;<br>                        wblockDb.ReadDwgFile(param.BlockPath, FileOpenMode.OpenForReadAndWriteNoShare, <span class="hljs-literal">true</span>, <span class="hljs-literal">null</span>);<br>                        wblockDb.CloseInput(<span class="hljs-literal">true</span>);<br><br>                        <span class="hljs-comment">// 插入外部块</span><br>                        wblockId = currdb.Insert(param.BlockName, wblockDb, <span class="hljs-literal">false</span>);<br>                    &#125;<br><br>                    insertPoint = <span class="hljs-keyword">new</span> Point3d(param.InsertPoint.X, param.InsertPoint.Y, param.InsertPoint.Z);<br>                    <span class="hljs-comment">// 创建块引用</span><br>                    blockReference = <span class="hljs-keyword">new</span> BlockReference(insertPoint, wblockId);<br><br>                    <span class="hljs-keyword">if</span> (layers.Has(param.LayerName))<br>                    &#123;<br>                        layer = currtransaction.GetObject(layers[param.LayerName], OpenMode.ForWrite) <span class="hljs-keyword">as</span> LayerTableRecord;<br>                        <span class="hljs-comment">//设置块引用的图层</span><br>                        blockReference.LayerId = layer.Id;<br>                    &#125;<br>                    <span class="hljs-comment">// 将块引用添加到模型空间</span><br>                    currblockTableRecord.AppendEntity(blockReference);<br><br>                    currtransaction.AddNewlyCreatedDBObject(blockReference, <span class="hljs-literal">true</span>);<br>                &#125;<br>                <span class="hljs-comment">// 提交事务</span><br>                currtransaction.Commit();<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (Exception)<br>            &#123;<br>                currtransaction.Abort();<br><br>                result = <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>块的插入操作在Autocad中需要有一个被插入的外部块文件，和一个插入的目标图形文件，目标图形文件可以是当前工作文档空间，也可以是一个指定的文件路径(最终也是通过文件路径打开工作文档空间)，插入过程中会读取外部块文件，将外部块文件在当前工作文档空间中创建块引用并指定插入点位以及图层</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#基于Autocad的二次开发(1.环境准备)</title>
    <link href="/2024/05/17/CsharpAutocad1/"/>
    <url>/2024/05/17/CsharpAutocad1/</url>
    
    <content type="html"><![CDATA[<h3 id="安装Autocad"><a href="#安装Autocad" class="headerlink" title="安装Autocad"></a>安装Autocad</h3><blockquote><p>作者安装的版本为2023，网上安装教程很多，这里不做赘述</p></blockquote><p>安装完成后在AutoCad安装的根目录(.exe所在的目录下)找到以下dll，后面开发需要依赖引用</p><ul><li>AcCoreMgd.dll</li><li>AcDbMgd.dll</li><li>AcMgd.dll</li><li>Autodesk.AutoCAD.Interop.Common.dll</li><li>Autodesk.AutoCAD.Interop.dll</li></ul><p><img src="/img/autocadlibs.png" alt="图片" title="dll"></p><h3 id="net-framework环境准备"><a href="#net-framework环境准备" class="headerlink" title=".net framework环境准备"></a>.net framework环境准备</h3><blockquote><p>下载对应版本的sdk，这里作者版本为4.7.1</p></blockquote><h3 id="解决方案搭建"><a href="#解决方案搭建" class="headerlink" title="解决方案搭建"></a>解决方案搭建</h3><p>新建解决方案名称为ACDesign，并创建以下多个.net framework类库项目</p><blockquote><p>基于Autocad二次开发时，解决方案中不需要有应用程序项目，项目调试或运行都做为Autocad的插件依托于autocad主程序运行</p></blockquote><ul><li>ACD.Domain – 领域模型</li><li>ACD.Application– 业务和抽象</li><li>ACD.Infrastructure– 基础设施</li><li>ACD.CadCore– 基于Autocad的核心操作</li><li>ACD.Client– 插件客户端,可通过Autocad命令调用窗体程序或者执行代码</li></ul><p><img src="/img/solution.png" alt="图片" title="解决方案"></p><h3 id="nuget包"><a href="#nuget包" class="headerlink" title="nuget包"></a>nuget包</h3><ul><li>Autofac 5.0.0 (ACD.Client，ACD.Infrastructure)</li><li>NLog 4.5.0 (ACD.Infrastructure)</li><li>SqlSugar 5.1.4.148 (ACD.Infrastructure，ACD.Domain，ACD.Application，ACD.Client)</li><li>Npgsql 4.0.6 (ACD.Infrastructure)</li><li>Autofac.Extras.NLog 3.0.1 (ACD.Infrastructure)</li><li>Hangfire.Autofac 2.4.0  (ACD.Infrastructure)</li><li>Hangfire.Core 1.7.30  (ACD.Infrastructure，ACD.Client)</li><li>Hangfire.SqlServer 1.7.30  (ACD.Infrastructure)</li></ul><p>ACD.CadCore和ACD.Client项目中需要额外引用以下dll</p><ul><li>AcCoreMgd.dll</li><li>AcDbMgd.dll</li><li>AcMgd.dll</li><li>Autodesk.AutoCAD.Interop.Common.dll</li><li>Autodesk.AutoCAD.Interop.dll</li></ul>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
      <category>AutoCad</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
      <tag>AutoCad</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>.NET6实现基于PaddleOCR+OpenCV的OCRAPI</title>
    <link href="/2023/12/08/OCRDemoSolution/"/>
    <url>/2023/12/08/OCRDemoSolution/</url>
    
    <content type="html"><![CDATA[<p>最近查阅资料，研究如何通过.net 6封装一个OCR API供自己的项目调用,期间了解到Google的Tesseract,尝试过后感觉Tesseract在中文识别的结果上达不到想要的预期,最后发现百度的开源项目PaddleOCR能满足需求,因此做如下尝试</p><p>新建解决方案OCRDemo,并创建Web Api项目OCR.API,类库项目OCR.Lib以及OCR.Application,项目结构如下:</p><p><img src="/img/ocr_demo_nuget_package.png" alt="图片" title="Solution"></p><div class="note note-warning">            <p>PaddleOCR和OpenCV在nuget都有封装好的包,直接安装如上图所示的nuget包,其中个别包的版本名称包含centos7-x64和win是为了分别应对不同平台的部署</p>          </div><p>安装好之后,在项目OCR.Application中创建接口IOCRService.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IOCRService</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 识别</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;picStream&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;resizeLine&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;cancellationToken&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function">Task&lt;OCRResult&gt; <span class="hljs-title">RunAsync</span>(<span class="hljs-params">Stream picStream, <span class="hljs-built_in">int</span> resizeLine, CancellationToken cancellationToken</span>)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>以及IRotationDetectorService.cs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IRotationService</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 旋转检测</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;picStream&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function">MemoryStream <span class="hljs-title">RotationCheck</span>(<span class="hljs-params">Stream picStream</span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建OCRResult.cs,定义图形识别之后的返回结果</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OCRResult</span><br>&#123;<br>    <span class="hljs-keyword">public</span> List&lt;OCRRegion&gt; Regions &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Text &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OCRSize</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Height &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Width &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span>  <span class="hljs-title">OCRPosition</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> X &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Y &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OCRRect</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Angle &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> OCRSize Size &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> OCRPosition Center &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OCRRegion</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">double</span> Score &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> OCRRect Rect &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Text &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>OCR.Lib项目中创建类Extensions.OpenCV.cs,实现OpenCV的部分图形预处理扩展方法</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Extensions</span><br>&#123;<br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 比例缩放大小</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;src&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;lineSize&quot;&gt;</span>宽+高的最大限定值<span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Mat <span class="hljs-title">SrcResize</span>(<span class="hljs-params"><span class="hljs-keyword">this</span> Mat src, <span class="hljs-built_in">int</span> lineSize</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//比例缩放</span><br>        <span class="hljs-built_in">int</span> size = src.Width + src.Height;<br>        <span class="hljs-built_in">double</span> wRate = src.Width / (<span class="hljs-built_in">double</span>)size;<br>        <span class="hljs-built_in">double</span> hRate = src.Height / (<span class="hljs-built_in">double</span>)size;<br><br>        <span class="hljs-keyword">var</span> reSize = <span class="hljs-keyword">new</span> Size(wRate * lineSize, hRate * lineSize);<br><br>        <span class="hljs-keyword">using</span> Mat resize_mat = <span class="hljs-keyword">new</span> Mat();<br>        Cv2.Resize(src, resize_mat, reSize);<br>        src = resize_mat.Clone();<br>        <span class="hljs-keyword">return</span> src;<br>    &#125;<br><br>    <span class="hljs-comment">//边缘检测</span><br><br>    <span class="hljs-comment">//膨胀</span><br><br>    <span class="hljs-comment">//腐蚀</span><br><br>    <span class="hljs-comment">//二值化</span><br><br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>接着创建RotationService.cs实现IRotationService旋转检测并矫正旋转角度</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> <span class="hljs-title class_"><span class="hljs-keyword">class</span> <span class="hljs-title">RotationService</span> : <span class="hljs-title">IRotationService</span></span><br><span class="hljs-title class_"></span>&#123;<br>    <span class="hljs-keyword">public</span> MemoryStream RotationCheck(Stream picStream)<br>    &#123;<br>        <span class="hljs-keyword">using</span> Mat src = Mat.FromStream(picStream, ImreadModes.Color);<br>        <span class="hljs-comment">//旋转检测</span><br>        <span class="hljs-keyword">using</span> PaddleRotationDetector detector = <span class="hljs-keyword">new</span> <span class="hljs-type">PaddleRotationDetector</span>(RotationDetectionModel.EmbeddedDefault);<br>        RotationResult rrotationResult = detector.Run(src);<br>        <span class="hljs-keyword">var</span> rotation = rrotationResult.Rotation;<br><br>        <span class="hljs-keyword">if</span> (rotation != RotationDegree<span class="hljs-number">._0</span>)<br>        &#123;<br>            <span class="hljs-comment">//矫正旋转</span><br>            <span class="hljs-keyword">using</span> Mat retotionSrc = rrotationResult.RestoreRotationInPlace(src).Clone();<br>            <span class="hljs-keyword">return</span> retotionSrc.ToMemoryStream();<br>        &#125;<br>        <span class="hljs-keyword">return</span> src.ToMemoryStream();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建OCRService.cs实现IOCRService完成图形字符识别</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OCRService</span> : <span class="hljs-title">IOCRService</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> QueuedPaddleOcrAll _paddleOcr;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">OCRService</span>(<span class="hljs-params">QueuedPaddleOcrAll paddleOcr</span>)</span><br>    &#123;<br>        _paddleOcr = paddleOcr;<br>    &#125;<br><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> 识别</span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;picStream&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;resizeLine&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;cancellationToken&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br>    <span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;OCRResult&gt; <span class="hljs-title">RunAsync</span>(<span class="hljs-params">Stream picStream, <span class="hljs-built_in">int</span> resizeLine, CancellationToken cancellationToken</span>)</span><br>    &#123;<br>        <span class="hljs-comment">//获取原图</span><br>        <span class="hljs-keyword">using</span> Mat src = Mat.FromStream(picStream, ImreadModes.Color);<br>        <span class="hljs-comment">//比例缩放大小,以便识别</span><br>        <span class="hljs-keyword">using</span> Mat resize_mat = src.SrcResize(resizeLine);<br>  <br>        <span class="hljs-keyword">var</span> paddleResult = <span class="hljs-keyword">await</span> _paddleOcr.Run(resize_mat, cancellationToken: cancellationToken);<br><br>        List&lt;OCRRegion&gt; regions = <span class="hljs-keyword">new</span> ();<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> paddleResult.Regions)<br>        &#123;<br>            regions.Add(<span class="hljs-keyword">new</span> OCRRegion<br>            &#123;<br>                Rect = <span class="hljs-keyword">new</span> OCRRect<br>                &#123;<br>                    Angle = item.Rect.Angle,<br>                    Center = <span class="hljs-keyword">new</span> OCRPosition<br>                    &#123;<br>                        X = item.Rect.Center.X,<br>                        Y = item.Rect.Center.Y<br>                    &#125;,<br>                    Size = <span class="hljs-keyword">new</span> OCRSize<br>                    &#123;<br>                        Height = item.Rect.Size.Height,<br>                        Width = item.Rect.Size.Width<br>                    &#125;<br>                &#125;,<br>                Score = item.Score,<br>                Text = item.Text,<br>            &#125;);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> OCRResult &#123; <br>             Text = paddleResult.Text,<br>             Regions = regions<br>        &#125;;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建Startup.cs通过DI注入服务</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Startup</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> IServiceCollection <span class="hljs-title">AddOcrLib</span><span class="hljs-params">(<span class="hljs-keyword">this</span> IServiceCollection services, IConfiguration config)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> services<br>            .<span class="hljs-built_in">AddTransient</span>&lt;IOCRService, OCRService&gt;()<br>            .<span class="hljs-built_in">AddTransient</span>&lt;IRotationService, RotationService&gt;()<br>            .<span class="hljs-built_in">AddPaddleOCR</span>(config);<br>    &#125;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> IServiceCollection <span class="hljs-title">AddPaddleOCR</span><span class="hljs-params">(<span class="hljs-keyword">this</span> IServiceCollection services, IConfiguration config)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> services.<span class="hljs-built_in">AddSingleton</span>(s =&gt;<br>        &#123;<br>            <span class="hljs-comment">//GPU or CPU</span><br>            Action&lt;PaddleConfig&gt; device = config.<span class="hljs-built_in">GetSection</span>(<span class="hljs-string">&quot;PaddleDevice&quot;</span>).Value == <span class="hljs-string">&quot;GPU&quot;</span> ? PaddleDevice.<span class="hljs-built_in">Gpu</span>() : PaddleDevice.<span class="hljs-built_in">Mkldnn</span>();<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">QueuedPaddleOcrAll</span>(() =&gt; <span class="hljs-keyword">new</span> <span class="hljs-built_in">PaddleOcrAll</span>(LocalFullModels.ChineseV3, device)<br>            &#123;<br>                Enable180Classification = <span class="hljs-literal">true</span>,<br>                AllowRotateDetection = <span class="hljs-literal">true</span>,<br>            &#125;, consumerCount: <span class="hljs-number">1</span>);<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>OCR.API项目中修改Program.cs,添加以下行:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">builder.Services.AddOcrLib(builder.Configuration)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>修改后如下:<br> <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs stata"> <br>try<br>&#123;<br><span class="hljs-keyword">var</span> builder = WebApplication.CreateBuilder(<span class="hljs-keyword">args</span>);<br><br><span class="hljs-comment">// Add services to the container.</span><br><br>builder.Services.AddControllers();<br><br>builder.Services.AddOcrLib(builder.Configuration);<br><br><span class="hljs-keyword">var</span> <span class="hljs-keyword">app</span> = builder.Build();<br><br><span class="hljs-comment">// Configure the HTTP request pipeline.</span><br><br><span class="hljs-keyword">app</span>.UseStaticFiles();<br><br><span class="hljs-keyword">app</span>.UseRouting();<br><br><span class="hljs-keyword">app</span>.UseAuthorization();<br><br><span class="hljs-keyword">app</span>.MapControllerRoute(<br>name: <span class="hljs-string">&quot;default&quot;</span>,<br>pattern: <span class="hljs-string">&quot;Api/&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);<br><br><br><span class="hljs-keyword">app</span>.<span class="hljs-keyword">Run</span>();<br><br>&#125;<br>catch (Exception <span class="hljs-keyword">ex</span>)<br>&#123;<br>throw <span class="hljs-keyword">ex</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p><p> appsettings.json文件中添加配置:<br> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-string">&quot;PaddleDevice&quot;</span>: <span class="hljs-string">&quot;CPU&quot;</span> <span class="hljs-regexp">//</span> or <span class="hljs-string">&quot;GPU&quot;</span><br></code></pre></td></tr></table></figure></p><p> 向Controllers文件夹下添加控制器OcrController.cs文件</p> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">Route(<span class="hljs-string">&quot;Api/[controller]&quot;</span>)</span>]<br>[<span class="hljs-meta">ApiController</span>]<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">BaseApiController</span>: <span class="hljs-title">ControllerBase</span><br>&#123;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">OcrController</span> : <span class="hljs-title">BaseApiController</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IOCRService _ocrService;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">readonly</span> IRotationService _rotationSerivice;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">OcrController</span>(<span class="hljs-params">IOCRService ocrService,IRotationService rotaionService</span>)</span> <br>    &#123;<br>        _ocrService = ocrService;<br>        _rotationSerivice = rotaionService;<br>    &#125;<br><br>    [<span class="hljs-meta">HttpPost</span>]<br>    [<span class="hljs-meta">Route(<span class="hljs-string">&quot;run&quot;</span>)</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">async</span> Task&lt;OCRResult&gt; <span class="hljs-title">RunAsync</span>(<span class="hljs-params">IFormFile file,CancellationToken cancellationToken</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">using</span> Stream stream = file.OpenReadStream();<br><br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-comment">//检测旋转</span><br>            <span class="hljs-keyword">var</span> ms = _rotationSerivice.RotationCheck(stream);<br><br>            <span class="hljs-keyword">var</span> result = <span class="hljs-keyword">await</span> _ocrService.RunAsync(ms, <span class="hljs-number">1500</span>, cancellationToken);<br><br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception ex)<br>        &#123;<br>            <span class="hljs-keyword">throw</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> 通过Postman上传一张身份证请求API查看返回结果如下:<br> <img src="/img/ocr_demo_req_postman.png" alt="图片" title="Postman result"></p><p> Dockerfile支持:<br> <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment">#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span><br><br><span class="hljs-keyword">FROM</span> sdflysha/dotnet6-focal-paddle2.<span class="hljs-number">2.2</span>:latest AS base<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">80</span><br><br><span class="hljs-keyword">FROM</span> sdflysha/dotnet6-focal-paddle2.<span class="hljs-number">2.2</span>:latest AS build<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /src</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> [<span class="hljs-string">&quot;OCR.API/OCR.API.csproj&quot;</span>, <span class="hljs-string">&quot;OCR.API/&quot;</span>]</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> [<span class="hljs-string">&quot;OCR.Lib/OCR.Lib.csproj&quot;</span>, <span class="hljs-string">&quot;OCR.Lib/&quot;</span>]</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> [<span class="hljs-string">&quot;OCR.Application/OCR.Application.csproj&quot;</span>, <span class="hljs-string">&quot;OCR.Application/&quot;</span>]</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> dotnet restore <span class="hljs-string">&quot;OCR.API/OCR.API.csproj&quot;</span></span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> . .</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> <span class="hljs-string">&quot;/src/OCR.API&quot;</span></span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> dotnet build <span class="hljs-string">&quot;OCR.API.csproj&quot;</span> -c Release -o /app/build</span><br><br><span class="hljs-keyword">FROM</span> build AS publish<br><span class="hljs-keyword">RUN</span><span class="language-bash"> dotnet publish <span class="hljs-string">&quot;OCR.API.csproj&quot;</span> -c Release -o /app/publish /p:UseAppHost=<span class="hljs-literal">false</span></span><br><br><span class="hljs-keyword">FROM</span> base AS final<br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> --from=publish /app/publish .</span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="hljs-string">&quot;dotnet&quot;</span>, <span class="hljs-string">&quot;OCR.API.dll&quot;</span>]</span><br></code></pre></td></tr></table></figure></p><p> 最终解决方案的结构如下:<br>  <img src="/img/ocr_demo_full_solution.png" alt="图片" title="Structure"></p><p>  最终的识别结果返回的文本内容格式需要结合实际需求进行相应的调整,并且为了提高文字识别的准确率可能还需要通过Opencv对原始图像进行一系列的预处理.</p>]]></content>
    
    
    <categories>
      
      <category>.NET 6</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PaddleOCR</tag>
      
      <tag>OpenCV</tag>
      
      <tag>.NET 6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C#中的浅拷贝与深拷贝</title>
    <link href="/2020/10/11/DeepClone/"/>
    <url>/2020/10/11/DeepClone/</url>
    
    <content type="html"><![CDATA[<h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><p><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/value-types" title="值类型">值类型</a></p><p>值类型的拷贝是将源拷贝对象的值赋予被拷贝对象，在修改被拷贝对象的值之后并不会影响源拷贝对象的值</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-comment">//值类型拷贝</span><br>    <span class="hljs-built_in">int</span> a = <span class="hljs-number">5</span>, b = a;<br>    b = <span class="hljs-number">6</span>;<br>    Console.WriteLine(<span class="hljs-string">$&quot;a:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;b:<span class="hljs-subst">&#123;b&#125;</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>控制台输出结果:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>:<span class="hljs-number">5</span><br><span class="hljs-attribute">b</span>:<span class="hljs-number">6</span><br></code></pre></td></tr></table></figure><p><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/reference-types" title="引用类型">引用类型</a></p><p>引用类型的拷贝只是复制源拷贝对象的引用地址给被拷贝对象，两者的引用地址都指向托管堆上的同一处对象实例，因此在修改被拷贝对象后源拷贝对象也会被修改</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Student A = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);<br>    Student B = <span class="hljs-keyword">new</span> Student();<br>    B = A;<br>    Console.WriteLine(<span class="hljs-string">$&quot;A:<span class="hljs-subst">&#123;A.ToString()&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;B:<span class="hljs-subst">&#123;B.ToString()&#125;</span>&quot;</span>);<br>    B.Name = <span class="hljs-string">&quot;李四&quot;</span>;<br>    B.Gender = <span class="hljs-string">&quot;女&quot;</span>;<br>    Console.WriteLine(<span class="hljs-string">$&quot;A:<span class="hljs-subst">&#123;A.ToString()&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;B:<span class="hljs-subst">&#123;B.ToString()&#125;</span>&quot;</span>);<br>    Console.ReadKey();<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><br>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span>()</span> &#123; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name,<span class="hljs-built_in">string</span> gender</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Name = name;<br>        <span class="hljs-keyword">this</span>.Gender = gender;<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _name;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _name; &#125;<br>        <span class="hljs-keyword">set</span> &#123; _name = <span class="hljs-keyword">value</span>; &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _gender;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Gender<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _gender; &#125;<br>        <span class="hljs-keyword">set</span> &#123; _gender = <span class="hljs-keyword">value</span>; &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">$&quot;Name:<span class="hljs-subst">&#123;Name&#125;</span>,Gender:<span class="hljs-subst">&#123;Gender&#125;</span>&quot;</span>;<br>    &#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><p>控制台输出结果:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">A:</span>Name:张三,Gender:男<br><span class="hljs-symbol">B:</span>Name:张三,Gender:男<br><span class="hljs-symbol">A:</span>Name:李四,Gender:女<br><span class="hljs-symbol">B:</span>Name:李四,Gender:女<br></code></pre></td></tr></table></figure><p>浅拷贝亦可继承自接口ICloneable通过MemberwiseClone方法实现接口的Clone成员</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Student A = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);<br>    Student B = (Student)A.Clone();<br>    Console.WriteLine(<span class="hljs-string">$&quot;A:<span class="hljs-subst">&#123;A.ToString()&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;B:<span class="hljs-subst">&#123;B.ToString()&#125;</span>&quot;</span>);<br>    Console.ReadKey();<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Student</span>:<span class="hljs-title">ICloneable</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span>()</span> &#123; &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Student</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name,<span class="hljs-built_in">string</span> gender</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">this</span>.Name = name;<br>        <span class="hljs-keyword">this</span>.Gender = gender;<br>    &#125;<br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _name;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _name; &#125;<br>        <span class="hljs-keyword">set</span> &#123; _name = <span class="hljs-keyword">value</span>; &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> _gender;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Gender<br>    &#123;<br>        <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> _gender; &#125;<br>        <span class="hljs-keyword">set</span> &#123; _gender = <span class="hljs-keyword">value</span>; &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">$&quot;Name:<span class="hljs-subst">&#123;Name&#125;</span>,Gender:<span class="hljs-subst">&#123;Gender&#125;</span>&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-built_in">object</span> <span class="hljs-title">Clone</span>()</span><br>    &#123;<br>        <span class="hljs-comment">//创建浅表副本</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.MemberwiseClone();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p>通过复制对象的每个成员实现深拷贝(仍以Student为例)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Student A = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">&quot;张三&quot;</span>, <span class="hljs-string">&quot;男&quot;</span>);<br>    <span class="hljs-comment">//Student B = new Student();</span><br>    <span class="hljs-comment">//B.Name = A.Name;</span><br>    <span class="hljs-comment">//B.Gender = A.Gender;</span><br>    <span class="hljs-comment">//Console.WriteLine($&quot;A:&#123;A.ToString()&#125;&quot;);</span><br>    <span class="hljs-comment">//Console.WriteLine($&quot;B:&#123;B.ToString()&#125;&quot;);</span><br>    <span class="hljs-comment">//B.Name = &quot;李四&quot;;</span><br>    <span class="hljs-comment">//B.Gender = &quot;女&quot;;</span><br>    <span class="hljs-comment">//Console.WriteLine($&quot;A:&#123;A.ToString()&#125;&quot;);</span><br>    <span class="hljs-comment">//Console.WriteLine($&quot;B:&#123;B.ToString()&#125;&quot;);</span><br><br>    Student B = DeepCopyByReflection&lt;Student&gt;(A);<br>    Console.WriteLine(<span class="hljs-string">$&quot;A:<span class="hljs-subst">&#123;A.ToString()&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;B:<span class="hljs-subst">&#123;B.ToString()&#125;</span>&quot;</span>);<br>    B.Name = <span class="hljs-string">&quot;李四&quot;</span>;<br>    B.Gender = <span class="hljs-string">&quot;女&quot;</span>;<br>    Console.WriteLine(<span class="hljs-string">$&quot;A:<span class="hljs-subst">&#123;A.ToString()&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;B:<span class="hljs-subst">&#123;B.ToString()&#125;</span>&quot;</span>);<br>&#125;<br><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> 复制对象每个成员实现深拷贝</span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;/summary&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;typeparam name=&quot;T&quot;&gt;</span><span class="hljs-doctag">&lt;/typeparam&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;param name=&quot;obj&quot;&gt;</span><span class="hljs-doctag">&lt;/param&gt;</span></span><br><span class="hljs-comment"><span class="hljs-doctag">///</span> <span class="hljs-doctag">&lt;returns&gt;</span><span class="hljs-doctag">&lt;/returns&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> T <span class="hljs-title">DeepCopyByReflection</span>&lt;<span class="hljs-title">T</span>&gt;(<span class="hljs-params">T obj</span>)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (obj <span class="hljs-keyword">is</span> <span class="hljs-built_in">string</span> || obj.GetType().IsValueType)<br>        <span class="hljs-keyword">return</span> obj;<br>    <br>    <span class="hljs-built_in">object</span> retval = Activator.CreateInstance(obj.GetType());<span class="hljs-comment">//创建对象实例</span><br>    FieldInfo[] fields = obj.GetType().GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static | BindingFlags.Instance);<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> field <span class="hljs-keyword">in</span> fields)<br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            <span class="hljs-comment">//复制字段值</span><br>            field.SetValue(retval, DeepCopyByReflection(field.GetValue(obj)));<br>        &#125;<br>        <span class="hljs-keyword">catch</span> &#123; &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> (T)retval;<br>&#125;<br></code></pre></td></tr></table></figure><p>控制台输出结果:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">A:</span>Name:张三,Gender:男<br><span class="hljs-symbol">B:</span>Name:张三,Gender:男<br><span class="hljs-symbol">A:</span>Name:张三,Gender:男<br><span class="hljs-symbol">B:</span>Name:李四,Gender:女<br></code></pre></td></tr></table></figure><h2 id="String-类型"><a href="#String-类型" class="headerlink" title="String 类型"></a>String 类型</h2><p>到了这里产生一个疑问，String同样为引用类型，但在平时使用过程中并没有出现上述引用类型浅拷贝的问题</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-built_in">string</span> a = <span class="hljs-string">&quot;123&quot;</span>, b = a;<br>    Console.WriteLine(<span class="hljs-string">$&quot;a:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;b:<span class="hljs-subst">&#123;b&#125;</span>&quot;</span>);<br><br>    b = <span class="hljs-string">&quot;456&quot;</span>;<br>    Console.WriteLine(<span class="hljs-string">$&quot;a:<span class="hljs-subst">&#123;a&#125;</span>&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">$&quot;b:<span class="hljs-subst">&#123;b&#125;</span>&quot;</span>);<br>    Console.ReadKey();<br>&#125;<br></code></pre></td></tr></table></figure><p>控制台输出结果:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>:<span class="hljs-number">123</span><br><span class="hljs-attribute">b</span>:<span class="hljs-number">123</span><br><span class="hljs-attribute">a</span>:<span class="hljs-number">123</span><br><span class="hljs-attribute">b</span>:<span class="hljs-number">456</span><br></code></pre></td></tr></table></figure><p><a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/reference-types" title="微软官方文档给出的解释">微软官方文档给出的解释</a></p><p>字符串是不可变的 ，即：字符串对象在创建后，尽管从语法上看似乎可以更改其内容，但事实上并不可行。 例如，在上述代码b &#x3D; “456”中，编译器实际上会创建一个新的字符串对象来保存新的字符序列，且该新对象将赋给 b。 已为 b 分配的内存可用于垃圾回收。</p>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C#</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020年7月3日21点36分</title>
    <link href="/2020/07/03/202007032136/"/>
    <url>/2020/07/03/202007032136/</url>
    
    <content type="html"><![CDATA[<p>距离创建这篇帖子也就是我们在一起的时间已有整整一个月,趁今天没那么忙,想着也算是一个特殊的日子写下一些值得纪念的内容。</p><h3 id="2020年8月3日"><a href="#2020年8月3日" class="headerlink" title="2020年8月3日"></a>2020年8月3日</h3><hr><p>一个月的时间里总是能听到你说我话不多,和你聊着聊着也能走神,就像表现得对你没那么上心,我也确实意识到了自己在这方面有些时候令你不快,也许和我从事的职业有关吧,平时的工作模式让我想的多说的少,兴许在我没有意识到的情况下这种工作模式已经渐渐的渗透到了我的生活方式当中,如果话题突然带偏到工作方面我想我应该会滔滔不绝的吧haha。写这些也并不是代表我想逃避问题,既然有问题那就去解决纠正,将更好的自己呈现在你面前这是我所期望的。</p><p>也说说你吧。”你很好”,其实这三个字就能概括你在我心目中的印象,但是哪天看到这里的你肯定不会满意的吧哈哈,活泼可爱,大方不随便,好像我喜欢的每一种特点都会出现在你身上一样,前些天晚上你训妹妹和一个认识没几天的异性夜不归宿时说的内容让我认识到你不是一个随便的女孩子,当然在这之前我也并没有认为你是!(求生欲让我觉得有必要加上这一句),我很喜欢你这一点。但是你也有让我不喜欢的缺点,你把自己的身体健康放在了一个很低的位置上,就是这一点让我今天早上还生了一把闷气,我不想因为我因为这种事情生气而导致你不开心所以没有表现在你面前,所以看到这里的话还请低血糖的你好好吃饭!<br>就先写到这里吧,总觉得界面排版加上几张照片会更好看(疯狂暗示)。<br>马上下班就能见到你了,开心!</p><h3 id="2020年8月11日"><a href="#2020年8月11日" class="headerlink" title="2020年8月11日"></a>2020年8月11日</h3><hr><p>突然今天就想更新了,趁午休时间写写,兴许是因为最近咱俩的沟通频率减少,兴许是被你昨晚迷迷糊糊的语气又给可爱到,反正就是我想你了你得知道！不过讲真,不管是第多少次什么时候听到你那种睡的迷迷糊糊时说话的语气都会联想到半眯着眼睛蜷缩在沙发上,嘴里嘟囔着发出呼噜呼噜声的猫,可爱到就想抱在怀里给你撸秃噜皮儿!</p><p>最近我也多了个爱好,时不时的喜欢盯着你看,这个时候你大抵会扭过头去,嘴里冒出一句:”你看我干嘛?”,有时我就那么笑着看你,更多时候我也会回你一句:”还不让我看啦?”期待有一天目光对视时你我不再闪躲,不过真有这么一回的话我想也会以笑场收尾吧哈哈。</p><p>今天休假的你这会告诉我睡醒了,没来由的觉得很温馨。</p><p>就写这么多,午休时间还剩一点我也眯会儿。</p><h3 id="2020年8月16日"><a href="#2020年8月16日" class="headerlink" title="2020年8月16日"></a>2020年8月16日</h3><hr><p>最近两次争吵的源头都是我将事情想的复杂，明明可以避免的矛盾由于我的胡思乱想以及不表达将一件再简单不过的日常对话放大演变成争执，长久以来内心里有个声音告诉我：“别人表现在你面前的并不一定就是他真正想让你看到的”，说出这句话的主人在将你慢慢推离我的身边。但我意识到你表现在我面前的就是你想让我看到的，你并不在那句话的“别人”那一类人之中，你将是以后漫长的半个多世纪里陪我一起度过的人，我想要和你一起走下去，我想要改变，一定会改变，为了不让你我以后的相处方式变得小心翼翼如屡薄冰。</p><p>这次更新对我来说检讨的作用大于记录的作用，提醒自己和你相处时的方式简单点，思想简单点，珍惜眼前人。</p><p>亲爱的李可爱，晚安~</p>]]></content>
    
    
    <categories>
      
      <category>生活记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>C#转换HTML内容为Bitmap</title>
    <link href="/2020/06/16/ConvertHtmlToBmp/"/>
    <url>/2020/06/16/ConvertHtmlToBmp/</url>
    
    <content type="html"><![CDATA[<p>话不多说，直接贴代码</p><p>绘图部分，其中html内容为一个公网链接或者本地虚拟路径</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs d"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Bitmap ConverHTML(<span class="hljs-built_in">string</span> htmPath)<br>&#123;<br>    <span class="hljs-built_in">string</span> ImagePath = <span class="hljs-built_in">string</span>.Empty;<br>    WebBrowser web = <span class="hljs-keyword">new</span> WebBrowser();<br>    web.Navigate(htmPath);<br>    <span class="hljs-keyword">while</span> (web.ReadyState != WebBrowserReadyState.Complete)<br>    &#123;<br>        Application.DoEvents();<br>    &#125;<br>    <span class="hljs-comment">//矩形容器宽高</span><br>    Rectangle screen = Screen.PrimaryScreen.Bounds;<br>    screen.Width = (<span class="hljs-keyword">int</span>)(screen.Width * <span class="hljs-number">0.55</span>);  <span class="hljs-comment">//自定义55%宽</span><br>    screen.Height = (<span class="hljs-keyword">int</span>)(screen.Height * <span class="hljs-number">0.3</span>); <span class="hljs-comment">//30%高</span><br>    Size? imgsize = <span class="hljs-literal">null</span>;<br>    <span class="hljs-comment">//设置宽高</span><br>    web.Width = screen.Width;<br>    web.Height = screen.Height;<br>    web.ScriptErrorsSuppressed = <span class="hljs-literal">true</span>;<br>    web.ScrollBarsEnabled = <span class="hljs-literal">false</span>;<br>    Rectangle <span class="hljs-keyword">body</span> = web.Document.Body.ScrollRectangle;<br><br>    Rectangle docRectangle = <span class="hljs-keyword">new</span> Rectangle()<br>    &#123;<br>        Location = <span class="hljs-keyword">new</span> Point(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<br>        Size = <span class="hljs-keyword">new</span> Size(<span class="hljs-keyword">body</span>.Width &gt; screen.Width ? <span class="hljs-keyword">body</span>.Width : screen.Width,<br>         <span class="hljs-keyword">body</span>.Height &gt; screen.Height ? <span class="hljs-keyword">body</span>.Height : screen.Height)<br>    &#125;;<br>    Rectangle imgRectangle;<br>    <span class="hljs-keyword">if</span> (imgsize == <span class="hljs-literal">null</span>)<br>        imgRectangle = docRectangle;<br>    <span class="hljs-keyword">else</span><br>        imgRectangle = <span class="hljs-keyword">new</span> Rectangle()<br>        &#123;<br>            Location = <span class="hljs-keyword">new</span> Point(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<br>            Size = imgsize.Value<br>        &#125;;<br>    Bitmap bitmap = <span class="hljs-keyword">new</span> Bitmap(web.Width, web.Height);<br>    IViewObject ivo = web.Document.DomDocument as IViewObject;<br><br>    using (Graphics g = Graphics.FromImage(bitmap))<br>    &#123;<br>        IntPtr hdc = g.GetHdc();<br>        ivo.Draw(<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, IntPtr.Zero, IntPtr.Zero,<br>                 IntPtr.Zero, hdc, <span class="hljs-keyword">ref</span> imgRectangle,<br>                 <span class="hljs-keyword">ref</span> docRectangle, IntPtr.Zero, <span class="hljs-number">0</span>);<br>        g.ReleaseHdc(hdc);<br>    &#125;<br>    <span class="hljs-keyword">return</span> bitmap;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用com组件用来实例化操作系统窗体</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-string">[ComVisible(true), ComImport()]</span><br><span class="hljs-string">[GuidAttribute(&quot;0000010d-0000-0000-C000-000000000046&quot;)]</span><br><span class="hljs-string">[InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-symbol">IViewObject</span><br>&#123;<br><span class="hljs-string">[return: MarshalAs(UnmanagedType.I4)]</span><br><span class="hljs-string">        [PreserveSig]</span><br>        <span class="hljs-built_in">int</span> Draw(<br><span class="hljs-string">            [MarshalAs(UnmanagedType.U4)]</span> UInt32 dwDrawAspect,<br>            <span class="hljs-built_in">int</span> lindex,<br>            IntPtr pvAspect,<br><span class="hljs-string">            [In]</span> IntPtr ptd,<br>            IntPtr hdcTargetDev,<br>            IntPtr hdcDraw,<br><span class="hljs-string">            [MarshalAs(UnmanagedType.Struct)]</span> <span class="hljs-built_in">ref</span> Rectangle lprcBounds,<br><span class="hljs-string">            [MarshalAs(UnmanagedType.Struct)]</span> <span class="hljs-built_in">ref</span> Rectangle lprcWBounds,<br>            IntPtr pfnContinue,<br><span class="hljs-string">            [MarshalAs(UnmanagedType.U4)]</span> UInt32 dwContinue);<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C#</category>
      
    </categories>
    
    
    <tags>
      
      <tag>COM+</tag>
      
      <tag>C#</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
